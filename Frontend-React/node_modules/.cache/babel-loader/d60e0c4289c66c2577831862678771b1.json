{"ast":null,"code":"import _objectSpread from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { push } from 'connected-react-router';\nimport { apiPost } from '../utils/api';\nimport Cookie from 'js-cookie';\nimport { List } from 'immutable';\nexport var PACKAGES_REQUEST = 'customer/PACKAGES_REQUEST';\nexport var PACKAGES_SUCCESS = 'customer/PACKAGES_SUCCESS';\nexport var PACKAGES_FAILED = 'customer/PACKAGES_SUCCESS';\nvar initialState = {\n  packages: List([])\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case PACKAGES_SUCCESS:\n      return _objectSpread({}, state, {\n        packages: action.payload.packages\n      });\n\n    default:\n      return state;\n  }\n});\nexport var getPackages = function getPackages(id) {\n  return function (dispatch) {\n    apiPost('customer/packages', {\n      id: id\n    }).then(function (respJSON) {\n      dispatch({\n        type: PACKAGES_SUCCESS,\n        payload: {\n          packages: respJSON.packages\n        }\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/home/cash/Documents/PostOffice/Frontend-React/src/reducers/customer.js"],"names":["push","apiPost","Cookie","List","PACKAGES_REQUEST","PACKAGES_SUCCESS","PACKAGES_FAILED","initialState","packages","state","action","type","payload","getPackages","id","dispatch","then","respJSON"],"mappings":";AAAA,SAASA,IAAT,QAAqB,wBAArB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,IAAT,QAAqB,WAArB;AAEA,OAAO,IAAMC,gBAAgB,GAAG,2BAAzB;AACP,OAAO,IAAMC,gBAAgB,GAAG,2BAAzB;AACP,OAAO,IAAMC,eAAe,GAAG,2BAAxB;AAEP,IAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAEL,IAAI,CAAC,EAAD;AADG,CAArB;AAIA,gBAAe,YAAkC;AAAA,MAAjCM,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,gBAAL;AACE,+BACKI,KADL;AAEED,QAAAA,QAAQ,EAAEE,MAAM,CAACE,OAAP,CAAeJ;AAF3B;;AAIF;AACE,aAAOC,KAAP;AAPJ;AASD,CAVD;AAYA,OAAO,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAACC,EAAD,EAAQ;AACjC,SAAO,UAAAC,QAAQ,EAAG;AAChBd,IAAAA,OAAO,CAAC,mBAAD,EAAsB;AAAEa,MAAAA,EAAE,EAAEA;AAAN,KAAtB,CAAP,CACGE,IADH,CACQ,UAACC,QAAD,EAAc;AAClBF,MAAAA,QAAQ,CAAC;AAAEJ,QAAAA,IAAI,EAAEN,gBAAR;AAA0BO,QAAAA,OAAO,EAAE;AAAEJ,UAAAA,QAAQ,EAAES,QAAQ,CAACT;AAArB;AAAnC,OAAD,CAAR;AACD,KAHH;AAID,GALD;AAMD,CAPM","sourcesContent":["import { push } from 'connected-react-router'\nimport { apiPost } from '../utils/api'\nimport Cookie from 'js-cookie'\nimport { List } from 'immutable'\n\nexport const PACKAGES_REQUEST = 'customer/PACKAGES_REQUEST';\nexport const PACKAGES_SUCCESS = 'customer/PACKAGES_SUCCESS';\nexport const PACKAGES_FAILED = 'customer/PACKAGES_SUCCESS';\n\nconst initialState = {\n    packages: List([])\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case PACKAGES_SUCCESS:\n      return {\n        ...state,\n        packages: action.payload.packages\n      };\n    default:\n      return state\n  }\n}\n\nexport const getPackages = (id) => {\n  return dispatch =>{\n    apiPost('customer/packages', { id: id })\n      .then((respJSON) => {\n        dispatch({ type: PACKAGES_SUCCESS, payload: { packages: respJSON.packages } })\n      })\n  }\n};\n"]},"metadata":{},"sourceType":"module"}