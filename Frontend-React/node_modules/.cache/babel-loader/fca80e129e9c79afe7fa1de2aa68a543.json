{"ast":null,"code":"import Cookie from 'js-cookie';\nimport { isDevelopment } from '../api/apiConfig';\nvar prodDomain = '.team9postoffice.ga';\nvar testDomain = '.127.0.0.1:3000';\nexport var getDomain = function getDomain() {\n  if (isDevelopment) {\n    return testDomain;\n  } else {\n    return prodDomain;\n  }\n};\nexport var isAuth = function isAuth() {\n  var credId = Cookie.get('id');\n  var credRole = Cookie.get('role');\n  return credId && credRole;\n};\nexport var getRole = function getRole() {\n  return Cookie.get('role');\n};\nexport var isManager = function isManager() {\n  if (isManager) {\n    if (isManager === true) {\n      return true;\n    }\n  }\n\n  return false;\n};","map":{"version":3,"sources":["/home/cash/Documents/PostOffice/Frontend-React/src/utils/auth/index.js"],"names":["Cookie","isDevelopment","prodDomain","testDomain","getDomain","isAuth","credId","get","credRole","getRole","isManager"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,WAAnB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,IAAMC,UAAU,GAAG,qBAAnB;AACA,IAAMC,UAAU,GAAG,iBAAnB;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAC7B,MAAIH,aAAJ,EAAmB;AACjB,WAAOE,UAAP;AACD,GAFD,MAEO;AACL,WAAOD,UAAP;AACD;AACF,CANM;AAQP,OAAO,IAAMG,MAAM,GAAG,SAATA,MAAS,GAAM;AAC1B,MAAMC,MAAM,GAAGN,MAAM,CAACO,GAAP,CAAW,IAAX,CAAf;AACA,MAAMC,QAAQ,GAAGR,MAAM,CAACO,GAAP,CAAW,MAAX,CAAjB;AACA,SAAOD,MAAM,IAAIE,QAAjB;AACD,CAJM;AAMP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAC3B,SAAOT,MAAM,CAACO,GAAP,CAAW,MAAX,CAAP;AACD,CAFM;AAIP,OAAO,IAAMG,SAAS,GAAG,SAAZA,SAAY,GAAM;AAC7B,MAAIA,SAAJ,EAAe;AACb,QAAIA,SAAS,KAAK,IAAlB,EAAuB;AACrB,aAAO,IAAP;AACD;AACF;;AACD,SAAO,KAAP;AACD,CAPM","sourcesContent":["import Cookie from 'js-cookie'\r\nimport { isDevelopment } from '../api/apiConfig';\r\n\r\nconst prodDomain = '.team9postoffice.ga';\r\nconst testDomain = '.127.0.0.1:3000';\r\n\r\nexport const getDomain = () => {\r\n  if (isDevelopment) {\r\n    return testDomain\r\n  } else {\r\n    return prodDomain\r\n  }\r\n};\r\n\r\nexport const isAuth = () => {\r\n  const credId = Cookie.get('id');\r\n  const credRole = Cookie.get('role');\r\n  return credId && credRole;\r\n};\r\n\r\nexport const getRole = () => {\r\n  return Cookie.get('role');\r\n};\r\n\r\nexport const isManager = () => {\r\n  if (isManager) {\r\n    if (isManager === true){\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n};"]},"metadata":{},"sourceType":"module"}