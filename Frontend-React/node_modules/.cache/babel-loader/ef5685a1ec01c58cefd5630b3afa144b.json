{"ast":null,"code":"import _objectSpread from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { push } from 'connected-react-router';\nimport { apiPost } from '../utils/api';\nexport var UPDATE_PASSWORD_FIELD = 'signup/UPDATE_PASSWORD_FIELD';\nexport var UPDATE_EMAIL_FIELD = 'signup/UPDATE_EMAIL_FIELD';\nexport var UPDATE_ADDRESS_FIELD = 'signup/UPDATE_ADDRESS_FIELD';\nexport var UPDATE_ADDRESS2_FIELD = 'signup/UPDATE_ADDRESS2_FIELD';\nexport var UPDATE_STATE_FIELD = 'signup/UPDATE_STATE_FIELD';\nexport var UPDATE_ZIP_FIELD = 'signup/UPDATE_ZIP_FIELD';\nexport var UPDATE_CITY_FIELD = 'signup/UPDATE_CITY_FIELD';\nexport var UPDATE_FIRST_NAME_FIELD = 'signup/UPDATE_FIRST_NAME_FIELD';\nexport var UPDATE_LAST_NAME_FIELD = 'signup/UPDATE_LAST_NAME_FIELD';\nexport var SIGNUP_REQUEST = 'signup/SIGNUP_REQUEST';\nexport var SIGNUP_SUCCESS = 'signup/SIGNUP_SUCCESS';\nexport var SIGNUP_FAILED = 'signup/SIGNUP_FAILED';\nvar initialState = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  password: \"\",\n  address: \"\",\n  address2: \"\",\n  city: \"\",\n  stateUS: \"Choose...\",\n  zip: \"\",\n  error: {\n    is: false,\n    msg: \"\"\n  }\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case UPDATE_PASSWORD_FIELD:\n      return _objectSpread({}, state, {\n        password: action.payload.password\n      });\n\n    case UPDATE_EMAIL_FIELD:\n      return _objectSpread({}, state, {\n        email: action.payload.email\n      });\n\n    case UPDATE_ADDRESS_FIELD:\n      return _objectSpread({}, state, {\n        address: action.payload.address\n      });\n\n    case UPDATE_ADDRESS2_FIELD:\n      return _objectSpread({}, state, {\n        address2: action.payload.address2\n      });\n\n    case UPDATE_STATE_FIELD:\n      return _objectSpread({}, state, {\n        stateUS: action.payload.stateUS\n      });\n\n    case UPDATE_CITY_FIELD:\n      return _objectSpread({}, state, {\n        city: action.payload.city\n      });\n\n    case UPDATE_ZIP_FIELD:\n      return _objectSpread({}, state, {\n        zip: action.payload.zip\n      });\n\n    case UPDATE_FIRST_NAME_FIELD:\n      return _objectSpread({}, state, {\n        firstName: action.payload.firstName\n      });\n\n    case UPDATE_LAST_NAME_FIELD:\n      return _objectSpread({}, state, {\n        lastName: action.payload.lastName\n      });\n\n    case SIGNUP_FAILED:\n      return _objectSpread({}, state, {\n        error: action.payload.error\n      });\n\n    default:\n      return state;\n  }\n});\nexport var updatePasswordField = function updatePasswordField(password) {\n  return function (dispatch) {\n    dispatch({\n      type: UPDATE_PASSWORD_FIELD,\n      payload: {\n        password: password\n      }\n    });\n  };\n};\nexport var updateEmailField = function updateEmailField(email) {\n  return function (dispatch) {\n    dispatch({\n      type: UPDATE_EMAIL_FIELD,\n      payload: {\n        email: email\n      }\n    });\n  };\n};\nexport var updateAddressField = function updateAddressField(address) {\n  return function (dispatch) {\n    dispatch({\n      type: UPDATE_ADDRESS_FIELD,\n      payload: {\n        address: address\n      }\n    });\n  };\n};\nexport var updateAddress2Field = function updateAddress2Field(address2) {\n  return function (dispatch) {\n    dispatch({\n      type: UPDATE_ADDRESS2_FIELD,\n      payload: {\n        address2: address2\n      }\n    });\n  };\n};\nexport var updateStateField = function updateStateField(state) {\n  return function (dispatch) {\n    dispatch({\n      type: UPDATE_STATE_FIELD,\n      payload: {\n        stateUS: state\n      }\n    });\n  };\n};\nexport var updateZipField = function updateZipField(zip) {\n  return function (dispatch) {\n    dispatch({\n      type: UPDATE_ZIP_FIELD,\n      payload: {\n        zip: zip\n      }\n    });\n  };\n};\nexport var updateCityField = function updateCityField(city) {\n  return function (dispatch) {\n    dispatch({\n      type: UPDATE_CITY_FIELD,\n      payload: {\n        city: city\n      }\n    });\n  };\n};\nexport var updateFirstNameField = function updateFirstNameField(name) {\n  return function (dispatch) {\n    dispatch({\n      type: UPDATE_FIRST_NAME_FIELD,\n      payload: {\n        firstName: name\n      }\n    });\n  };\n};\nexport var updateLastNameField = function updateLastNameField(name) {\n  return function (dispatch) {\n    dispatch({\n      type: UPDATE_LAST_NAME_FIELD,\n      payload: {\n        lastName: name\n      }\n    });\n  };\n};\nexport var submit = function submit() {\n  return function (dispatch) {\n    dispatch({\n      type: SIGNUP_REQUEST\n    });\n    apiPost('/signup/customer', {}).then(function (respJSON) {\n      if (respJSON.success) {\n        dispatch({\n          type: SIGNUP_SUCCESS\n        });\n        dispatch(push('/'));\n      } else {\n        throw new Error('Could not signup!');\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/home/cash/Documents/PostOffice/Frontend-React/src/reducers/signup.js"],"names":["push","apiPost","UPDATE_PASSWORD_FIELD","UPDATE_EMAIL_FIELD","UPDATE_ADDRESS_FIELD","UPDATE_ADDRESS2_FIELD","UPDATE_STATE_FIELD","UPDATE_ZIP_FIELD","UPDATE_CITY_FIELD","UPDATE_FIRST_NAME_FIELD","UPDATE_LAST_NAME_FIELD","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAILED","initialState","firstName","lastName","email","password","address","address2","city","stateUS","zip","error","is","msg","state","action","type","payload","updatePasswordField","dispatch","updateEmailField","updateAddressField","updateAddress2Field","updateStateField","updateZipField","updateCityField","updateFirstNameField","name","updateLastNameField","submit","then","respJSON","success","Error"],"mappings":"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","sourcesContent":["import { push } from 'connected-react-router'\r\nimport { apiPost } from '../utils/api';\r\n\r\nexport const UPDATE_PASSWORD_FIELD = 'signup/UPDATE_PASSWORD_FIELD';\r\nexport const UPDATE_EMAIL_FIELD = 'signup/UPDATE_EMAIL_FIELD';\r\nexport const UPDATE_ADDRESS_FIELD = 'signup/UPDATE_ADDRESS_FIELD';\r\nexport const UPDATE_ADDRESS2_FIELD = 'signup/UPDATE_ADDRESS2_FIELD';\r\nexport const UPDATE_STATE_FIELD = 'signup/UPDATE_STATE_FIELD';\r\nexport const UPDATE_ZIP_FIELD = 'signup/UPDATE_ZIP_FIELD';\r\nexport const UPDATE_CITY_FIELD = 'signup/UPDATE_CITY_FIELD';\r\nexport const UPDATE_FIRST_NAME_FIELD = 'signup/UPDATE_FIRST_NAME_FIELD';\r\nexport const UPDATE_LAST_NAME_FIELD = 'signup/UPDATE_LAST_NAME_FIELD';\r\nexport const SIGNUP_REQUEST = 'signup/SIGNUP_REQUEST';\r\nexport const SIGNUP_SUCCESS = 'signup/SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAILED = 'signup/SIGNUP_FAILED';\r\n\r\nconst initialState = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  address: \"\",\r\n  address2: \"\",\r\n  city: \"\",\r\n  stateUS: \"Choose...\",\r\n  zip: \"\",\r\n  error: { is: false, msg: \"\" },\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_PASSWORD_FIELD:\r\n      return {\r\n        ...state,\r\n        password: action.payload.password\r\n      };\r\n    case UPDATE_EMAIL_FIELD:\r\n      return {\r\n        ...state,\r\n        email: action.payload.email\r\n      };\r\n    case UPDATE_ADDRESS_FIELD:\r\n        return {\r\n          ...state,\r\n          address: action.payload.address,\r\n        };\r\n    case UPDATE_ADDRESS2_FIELD:\r\n      return {\r\n        ...state,\r\n        address2: action.payload.address2,\r\n      };\r\n    case UPDATE_STATE_FIELD:\r\n      return {\r\n        ...state,\r\n        stateUS: action.payload.stateUS,\r\n      };\r\n    case UPDATE_CITY_FIELD:\r\n      return {\r\n        ...state,\r\n        city: action.payload.city,\r\n      };\r\n    case UPDATE_ZIP_FIELD:\r\n      return {\r\n        ...state,\r\n        zip: action.payload.zip,\r\n      };\r\n    case UPDATE_FIRST_NAME_FIELD:\r\n      return {\r\n        ...state,\r\n        firstName: action.payload.firstName,\r\n      };\r\n    case UPDATE_LAST_NAME_FIELD:\r\n      return {\r\n        ...state,\r\n        lastName: action.payload.lastName,\r\n      };\r\n    case SIGNUP_FAILED:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const updatePasswordField = (password) => {\r\n  return dispatch => {\r\n    dispatch({ type: UPDATE_PASSWORD_FIELD, payload: { password: password } })\r\n  }\r\n};\r\n\r\nexport const updateEmailField = (email) => {\r\n  return dispatch => {\r\n    dispatch({ type: UPDATE_EMAIL_FIELD, payload: { email: email } })\r\n  }\r\n};\r\n\r\nexport const updateAddressField = (address) => {\r\n  return dispatch => {\r\n    dispatch({ type: UPDATE_ADDRESS_FIELD, payload: { address: address } })\r\n  }\r\n};\r\n\r\nexport const updateAddress2Field = (address2) => {\r\n  return dispatch => {\r\n    dispatch({ type: UPDATE_ADDRESS2_FIELD, payload: { address2: address2 } })\r\n  }\r\n};\r\n\r\nexport const updateStateField = (state) => {\r\n  return dispatch => {\r\n    dispatch({ type: UPDATE_STATE_FIELD, payload: { stateUS: state } })\r\n  }\r\n};\r\n\r\nexport const updateZipField = (zip) => {\r\n  return dispatch => {\r\n    dispatch({ type: UPDATE_ZIP_FIELD, payload: { zip: zip } })\r\n  }\r\n};\r\n\r\nexport const updateCityField = (city) => {\r\n  return dispatch => {\r\n    dispatch({ type: UPDATE_CITY_FIELD, payload: { city: city } })\r\n  }\r\n};\r\n\r\nexport const updateFirstNameField = (name) => {\r\n  return dispatch => {\r\n    dispatch({ type: UPDATE_FIRST_NAME_FIELD, payload: { firstName: name } })\r\n  }\r\n};\r\n\r\nexport const updateLastNameField = (name) => {\r\n  return dispatch => {\r\n    dispatch({ type: UPDATE_LAST_NAME_FIELD, payload: { lastName: name } })\r\n  }\r\n};\r\n\r\nexport const submit = () => {\r\n  return dispatch => {\r\n    dispatch({ type: SIGNUP_REQUEST })\r\n\r\n    apiPost('/signup/customer', {})\r\n      .then(respJSON => {\r\n        if (respJSON.success) {\r\n          dispatch({ type: SIGNUP_SUCCESS })\r\n          dispatch(push('/'))\r\n        } else {\r\n          throw new Error('Could not signup!')\r\n        }\r\n      })\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}