{"ast":null,"code":"import _objectSpread from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/cash/Documents/PostOffice/Frontend-React/src/containers/manager/index.js\";\nimport React from 'react';\nimport { isManager } from '../../utils/auth';\nimport Cookie from 'js-cookie';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Table from 'react-bootstrap/Table';\nimport { List } from 'immutable';\nimport { apiPost } from '../../utils/api';\nimport Alert from 'react-bootstrap/Alert';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, PieChart, Pie, Cell } from 'recharts';\n\nvar Manager =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Manager, _React$Component);\n\n  function Manager(props) {\n    var _this;\n\n    _classCallCheck(this, Manager);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Manager).call(this, props));\n\n    _this.getEmployees = function (payload) {\n      apiPost('/facility/employees', payload).then(function (resp) {\n        console.log(resp);\n\n        _this.setState({\n          employees: List(resp.employees)\n        }, _this.computeData);\n      }).catch(function (error) {\n        _this.setState({\n          notification: {\n            is: true,\n            message: 'Could not get employees',\n            type: 'danger',\n            header: 'Error!'\n          }\n        });\n      });\n    };\n\n    _this.makeTR = function (e, id) {\n      return React.createElement(React.Fragment, {\n        key: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \" \", e.id, \" \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \" \", e.firstName, \" \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \" \", e.lastName, \" \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \" \", e.position, \" \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \" \", e.workPhoneNum, \" \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \" \", e.workEmail, \" \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \" \", e.salary, \" \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \" \", React.createElement(Button, {\n        variant: \"info\",\n        href: '/employee/edit#' + e.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Edit\"), \" \")));\n    };\n\n    _this.handleChangeNewEmpView = function () {\n      _this.setState({\n        showNewEmp: !_this.state.showNewEmp\n      });\n    };\n\n    _this.handleChangeReportView = function () {\n      _this.setState({\n        showReport: !_this.state.showReport\n      });\n    };\n\n    _this.openStatusReport = function () {\n      _this.setState({\n        showPackStatusReport: !_this.state.showPackStatusReport\n      });\n    };\n\n    _this.handleNewEmpChange = function (event) {\n      var newEmpObj = _this.state.newEmp;\n      newEmpObj[event.target.name] = event.target.value;\n\n      _this.setState({\n        newEmp: newEmpObj\n      });\n    };\n\n    _this.handleNewEmpSubmit = function () {\n      console.log(_this.state.newEmp);\n      var emp = _this.state.newEmp;\n\n      if (emp.phoneNum && emp.email && emp.password && emp.firstName && emp.lastName && emp.position && emp.salary && emp.zip && emp.address && emp.state && emp.city && emp.role && emp.role !== 'Choose...') {\n        apiPost('/manager/addEmployee', _objectSpread({\n          managerID: _this.state.id,\n          facilityID: _this.state.facilityID\n        }, _this.state.newEmp)).then(function (resp) {\n          console.log(resp);\n\n          if (resp.success === true) {\n            window.location.reload();\n          } else {\n            _this.setState({\n              notification: {\n                is: true,\n                message: 'Could not add employee. Invalid input or employee already exist.',\n                type: 'danger',\n                header: 'Error!'\n              }\n            });\n          }\n        }).catch(function (error) {\n          _this.setState({\n            showNewEmp: false\n          });\n\n          _this.setState({\n            notification: {\n              is: true,\n              message: 'Could not add employee. Invalid input or employee already exist.',\n              type: 'danger',\n              header: 'Error!'\n            }\n          });\n        });\n      }\n    };\n\n    _this.computeData = function () {\n      var data = [{\n        name: 'Clerk',\n        value: 0\n      }, {\n        name: 'Supervisor',\n        value: 0\n      }, {\n        name: 'Sorter',\n        value: 0\n      }, {\n        name: 'Security',\n        value: 0\n      }, {\n        name: 'Driver',\n        value: 0\n      }, {\n        name: 'Carrier',\n        value: 0\n      }];\n      console.log(_this.state.employees);\n\n      _this.state.employees.forEach(function (e) {\n        console.log(e);\n\n        for (var i = 0; i < 6; i++) {\n          if (e.position === data[i].name) {\n            console.log(e.position, data[i].name);\n            data[i].value += 1;\n          }\n        }\n      });\n\n      data = data.filter(function (i) {\n        return i.value !== 0;\n      });\n\n      _this.setState({\n        statusData: data\n      }, function () {\n        console.log(_this.state.statusData);\n      });\n    };\n\n    _this.renderCustomizedLabel = function (_ref) {\n      var cx = _ref.cx,\n          cy = _ref.cy,\n          midAngle = _ref.midAngle,\n          innerRadius = _ref.innerRadius,\n          outerRadius = _ref.outerRadius,\n          percent = _ref.percent,\n          index = _ref.index;\n      var radius = 25 + innerRadius + (outerRadius - innerRadius);\n      var x = cx + radius * Math.cos(-midAngle * RADIAN);\n      var y = cy + radius * Math.sin(-midAngle * RADIAN);\n      return React.createElement(\"text\", {\n        x: x,\n        y: y,\n        fill: \"black\",\n        textAnchor: x > cx ? 'start' : 'end',\n        dominantBaseline: \"middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"\".concat(_this.state.statusData[index].name, \" \").concat((percent * 100).toFixed(0), \"%\"));\n    };\n\n    _this.state = {\n      id: Cookie.get('id'),\n      isManager: isManager(),\n      facilityID: Cookie.get('facilityID'),\n      employees: List([]),\n      newEmp: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        position: '',\n        salary: '',\n        phoneNum: '',\n        zip: '',\n        state: '',\n        address: '',\n        city: '',\n        role: 'Choose...'\n      },\n      showNewEmp: false,\n      showReport: false,\n      showPackStatusReport: false,\n      notification: {\n        is: false,\n        message: '',\n        type: '',\n        header: ''\n      },\n      statusData: []\n    };\n    _this.makeTR = _this.makeTR.bind(_assertThisInitialized(_this));\n    _this.handleChangeNewEmpView = _this.handleChangeNewEmpView.bind(_assertThisInitialized(_this));\n    _this.getEmployees = _this.getEmployees.bind(_assertThisInitialized(_this));\n    _this.handleNewEmpChange = _this.handleNewEmpChange.bind(_assertThisInitialized(_this));\n    _this.handleChangeReportView = _this.handleChangeReportView.bind(_assertThisInitialized(_this));\n    _this.handleNewEmpSubmit = _this.handleNewEmpSubmit.bind(_assertThisInitialized(_this));\n    _this.renderCustomizedLabel = _this.renderCustomizedLabel.bind(_assertThisInitialized(_this));\n    _this.computeData = _this.computeData.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Manager, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getEmployees({\n        managerID: this.state.id,\n        facilityID: this.state.facilityID\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var data = [{\n        name: 'January',\n        Packages: 0,\n        Employees: 0\n      }, {\n        name: 'February',\n        Packages: 0,\n        Employees: 2\n      }, {\n        name: 'March',\n        Packages: 4,\n        Employees: 3\n      }, {\n        name: 'April',\n        Packages: 12,\n        Employees: this.state.employees.size\n      }, {\n        name: 'May',\n        Packages: 0,\n        Employees: 0\n      }];\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, this.state.notification.is ? React.createElement(Alert, {\n        variant: this.state.notification.type,\n        dismissible: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \" \", React.createElement(Alert.Heading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, this.state.notification.header), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, this.state.notification.message)) : null, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"Control Center\"), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"Managerial Actions\"), React.createElement(Button, {\n        size: \"lg\",\n        variant: \"success\",\n        style: ControlButtonStyle,\n        onClick: this.handleChangeNewEmpView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Add Employee\"), React.createElement(Button, {\n        size: \"lg\",\n        variant: \"info\",\n        style: ControlButtonStyle,\n        onClick: this.handleChangeReportView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Review Facility Report\"), React.createElement(Button, {\n        style: ControlButtonStyle,\n        size: \"lg\",\n        variant: \"dark\",\n        onClick: this.openStatusReport,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"Review Employee Role Report\")))), React.createElement(Modal, {\n        show: this.state.showPackStatusReport,\n        size: \"lg\",\n        onHide: this.openStatusReport,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"Customer Package Status Report\")), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(ResponsiveContainer, {\n        width: '100%',\n        height: 400,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(PieChart, {\n        width: 500,\n        height: 500,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(Pie, {\n        data: this.state.statusData,\n        cx: 375,\n        cy: 200,\n        label: this.renderCustomizedLabel,\n        outerRadius: 120,\n        fill: \"#8884d8\",\n        dataKey: \"value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, this.state.employees.map(function (entry, index) {\n        return React.createElement(Cell, {\n          key: \"cell-\".concat(index),\n          fill: COLORS[index % COLORS.length],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        });\n      }))))), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      })), React.createElement(Modal, {\n        show: this.state.showNewEmp,\n        onHide: this.handleChangeNewEmpView,\n        name: \"CreateEmp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Add New Employee\")), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridFirstName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \" First Name \"), React.createElement(Form.Control, {\n        placeholder: \"John\",\n        name: \"firstName\",\n        value: this.state.newEmp.firstName,\n        onChange: this.handleNewEmpChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridLastName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \" Last Name \"), React.createElement(Form.Control, {\n        placeholder: \"Smith\",\n        name: \"lastName\",\n        value: this.state.newEmp.lastName,\n        onChange: this.handleNewEmpChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \" Work Email \"), React.createElement(Form.Control, {\n        placeholder: \"example@website.com\",\n        name: \"email\",\n        value: this.state.newEmp.email,\n        onChange: this.handleNewEmpChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, \" Password \"), React.createElement(Form.Control, {\n        type: \"password\",\n        placeholder: \"********\",\n        name: \"password\",\n        value: this.state.newEmp.password,\n        onChange: this.handleNewEmpChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridPosition\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \" Position \"), React.createElement(Form.Control, {\n        placeholder: \"Clerk\",\n        name: \"position\",\n        value: this.state.newEmp.position,\n        onChange: this.handleNewEmpChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridSalary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \" Salary \"), React.createElement(Form.Control, {\n        placeholder: \"60000\",\n        name: \"salary\",\n        value: this.state.newEmp.salary,\n        onChange: this.handleNewEmpChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridPhone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, \" Work Phone \"), React.createElement(Form.Control, {\n        placeholder: \"832-123-123\",\n        name: \"phoneNum\",\n        value: this.state.newEmp.phoneNum,\n        onChange: this.handleNewEmpChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridAddress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, \" Address \"), React.createElement(Form.Control, {\n        placeholder: \"123 Main St.\",\n        name: \"address\",\n        value: this.state.newEmp.address,\n        onChange: this.handleNewEmpChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridCity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \" City \"), React.createElement(Form.Control, {\n        placeholder: \"Houston\",\n        name: \"city\",\n        value: this.state.newEmp.city,\n        onChange: this.handleNewEmpChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridZip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, \" Zip \"), React.createElement(Form.Control, {\n        placeholder: \"77023\",\n        name: \"zip\",\n        value: this.state.newEmp.zip,\n        onChange: this.handleNewEmpChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridState\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, \" State \"), React.createElement(Form.Control, {\n        name: \"state\",\n        value: this.state.newEmp.state,\n        onChange: this.handleNewEmpChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridRole\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, \" Role \"), React.createElement(Form.Control, {\n        as: \"select\",\n        name: \"role\",\n        value: this.state.newEmp.role,\n        onChange: this.handleNewEmpChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, \"Choose...\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, \"Supervisor\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, \"Driver\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \"Facility\"))))), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"success\",\n        onClick: this.handleNewEmpSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, \" Submit \"))), React.createElement(Modal, {\n        show: this.state.showReport,\n        onHide: this.handleChangeReportView,\n        name: \"ShowReport\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, \"Review Facility Report\")), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(BarChart, {\n        width: 500,\n        height: 300,\n        data: data,\n        margin: {\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        style: {\n          marginLeft: '-7%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }), React.createElement(XAxis, {\n        dataKey: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }), React.createElement(Bar, {\n        dataKey: \"Packages\",\n        fill: \"#8884d8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }), React.createElement(Bar, {\n        dataKey: \"Employees\",\n        fill: \"#82ca9d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      })))), React.createElement(\"h3\", {\n        style: h3Style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, \"Employees\"), React.createElement(Table, {\n        style: tableStyle,\n        striped: true,\n        bordered: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, \"#\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, \"Last Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, \"Position\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, \"Work Phone\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, \"Work Email\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, \"Salary\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, \"Edit Employee\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, this.state.employees.map(function (e) {\n        return _this2.makeTR(e, e.id);\n      }))));\n    }\n  }]);\n\n  return Manager;\n}(React.Component);\n\nvar tableStyle = {\n  margin: '0 auto',\n  textAlign: \"center\"\n};\nvar ControlButtonStyle = {\n  marginRight: '16px'\n};\nvar h3Style = {\n  marginTop: '2.5%'\n};\nvar COLORS = ['#fe00de', '#00C49F', '#84fffa', '#FF8042', '#00C49F', '#FFBB28', '#FF8042'];\nvar RADIAN = Math.PI / 180;\nexport default Manager;","map":{"version":3,"sources":["/home/cash/Documents/PostOffice/Frontend-React/src/containers/manager/index.js"],"names":["React","isManager","Cookie","Button","Modal","Form","Col","Card","Table","List","apiPost","Alert","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","PieChart","Pie","Cell","Manager","props","getEmployees","payload","then","resp","console","log","setState","employees","computeData","catch","error","notification","is","message","type","header","makeTR","e","id","firstName","lastName","position","workPhoneNum","workEmail","salary","handleChangeNewEmpView","showNewEmp","state","handleChangeReportView","showReport","openStatusReport","showPackStatusReport","handleNewEmpChange","event","newEmpObj","newEmp","target","name","value","handleNewEmpSubmit","emp","phoneNum","email","password","zip","address","city","role","managerID","facilityID","success","window","location","reload","data","forEach","i","filter","statusData","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","index","radius","x","Math","cos","RADIAN","y","sin","toFixed","get","bind","Packages","Employees","size","ControlButtonStyle","map","entry","COLORS","length","top","right","left","bottom","marginLeft","h3Style","tableStyle","Component","margin","textAlign","marginRight","marginTop","PI"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,SAASC,IAAT,QAAqB,WAArB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,SACEC,QADF,EACYC,GADZ,EACiBC,KADjB,EACwBC,KADxB,EAC+BC,aAD/B,EAC8CC,OAD9C,EACuDC,MADvD,EAC+DC,mBAD/D,EACoFC,QADpF,EAC8FC,GAD9F,EACmGC,IADnG,QAEO,UAFP;;IAKMC,O;;;;;AACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;;AADiB,UAqCnBC,YArCmB,GAqCJ,UAACC,OAAD,EAAa;AAC1BhB,MAAAA,OAAO,CAAC,qBAAD,EAAwBgB,OAAxB,CAAP,CACKC,IADL,CACU,UAACC,IAAD,EAAU;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,cAAKG,QAAL,CAAc;AAAEC,UAAAA,SAAS,EAAEvB,IAAI,CAACmB,IAAI,CAACI,SAAN;AAAjB,SAAd,EAAmD,MAAKC,WAAxD;AACD,OAJL,EAKKC,KALL,CAKW,UAACC,KAAD,EAAW;AAChB,cAAKJ,QAAL,CAAc;AAAEK,UAAAA,YAAY,EAAE;AAAEC,YAAAA,EAAE,EAAE,IAAN;AAAYC,YAAAA,OAAO,EAAE,yBAArB;AAAgDC,YAAAA,IAAI,EAAE,QAAtD;AAAgEC,YAAAA,MAAM,EAAE;AAAxE;AAAhB,SAAd;AAED,OARL;AASD,KA/CkB;;AAAA,UAwDnBC,MAxDmB,GAwDV,UAACC,CAAD,EAAIC,EAAJ,EAAW;AAChB,aACE,oBAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,GAAG,EAAEA,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAOD,CAAC,CAACC,EAAT,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAOD,CAAC,CAACE,SAAT,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAOF,CAAC,CAACG,QAAT,MAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAOH,CAAC,CAACI,QAAT,MAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAOJ,CAAC,CAACK,YAAT,MALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAOL,CAAC,CAACM,SAAT,MANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAON,CAAC,CAACO,MAAT,MAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAK,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,MAAhB;AAAuB,QAAA,IAAI,EAAE,oBAAoBP,CAAC,CAACC,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAL,MARF,CADF,CADF;AAaH,KAtEkB;;AAAA,UAwEnBO,sBAxEmB,GAwEM,YAAM;AAC7B,YAAKnB,QAAL,CAAc;AAAEoB,QAAAA,UAAU,EAAE,CAAC,MAAKC,KAAL,CAAWD;AAA1B,OAAd;AACD,KA1EkB;;AAAA,UA4EnBE,sBA5EmB,GA4EM,YAAM;AAC7B,YAAKtB,QAAL,CAAc;AAAEuB,QAAAA,UAAU,EAAE,CAAC,MAAKF,KAAL,CAAWE;AAA1B,OAAd;AACD,KA9EkB;;AAAA,UAgFnBC,gBAhFmB,GAgFA,YAAM;AACvB,YAAKxB,QAAL,CAAc;AAAEyB,QAAAA,oBAAoB,EAAE,CAAC,MAAKJ,KAAL,CAAWI;AAApC,OAAd;AACD,KAlFkB;;AAAA,UAoFnBC,kBApFmB,GAoFE,UAACC,KAAD,EAAW;AAC9B,UAAIC,SAAS,GAAG,MAAKP,KAAL,CAAWQ,MAA3B;AACAD,MAAAA,SAAS,CAACD,KAAK,CAACG,MAAN,CAAaC,IAAd,CAAT,GAA+BJ,KAAK,CAACG,MAAN,CAAaE,KAA5C;;AACA,YAAKhC,QAAL,CAAc;AAAE6B,QAAAA,MAAM,EAAED;AAAV,OAAd;AACD,KAxFkB;;AAAA,UA0FnBK,kBA1FmB,GA0FE,YAAM;AACzBnC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKsB,KAAL,CAAWQ,MAAvB;AACA,UAAMK,GAAG,GAAG,MAAKb,KAAL,CAAWQ,MAAvB;;AACA,UAAIK,GAAG,CAACC,QAAJ,IAAgBD,GAAG,CAACE,KAApB,IAA6BF,GAAG,CAACG,QAAjC,IAA6CH,GAAG,CAACrB,SAAjD,IAA8DqB,GAAG,CAACpB,QAAlE,IAA8EoB,GAAG,CAACnB,QAAlF,IAA8FmB,GAAG,CAAChB,MAAlG,IAA4GgB,GAAG,CAACI,GAAhH,IAAuHJ,GAAG,CAACK,OAA3H,IAAsIL,GAAG,CAACb,KAA1I,IAAmJa,GAAG,CAACM,IAAvJ,IAA+JN,GAAG,CAACO,IAAnK,IAA2KP,GAAG,CAACO,IAAJ,KAAa,WAA5L,EAAyM;AACvM9D,QAAAA,OAAO,CAAC,sBAAD;AACL+D,UAAAA,SAAS,EAAE,MAAKrB,KAAL,CAAWT,EADjB;AAEL+B,UAAAA,UAAU,EAAE,MAAKtB,KAAL,CAAWsB;AAFlB,WAGF,MAAKtB,KAAL,CAAWQ,MAHT,EAAP,CAKGjC,IALH,CAKQ,UAACC,IAAD,EAAU;AACdC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,cAAIA,IAAI,CAAC+C,OAAL,KAAiB,IAArB,EAA2B;AACzBC,YAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,WAFD,MAEO;AACL,kBAAK/C,QAAL,CAAc;AAAEK,cAAAA,YAAY,EAAE;AAAEC,gBAAAA,EAAE,EAAE,IAAN;AAAYC,gBAAAA,OAAO,EAAE,kEAArB;AAAyFC,gBAAAA,IAAI,EAAE,QAA/F;AAAyGC,gBAAAA,MAAM,EAAE;AAAjH;AAAhB,aAAd;AACD;AACF,SAZH,EAaGN,KAbH,CAaS,UAAAC,KAAK,EAAI;AACd,gBAAKJ,QAAL,CAAc;AAAEoB,YAAAA,UAAU,EAAE;AAAd,WAAd;;AACA,gBAAKpB,QAAL,CAAc;AAAEK,YAAAA,YAAY,EAAE;AAAEC,cAAAA,EAAE,EAAE,IAAN;AAAYC,cAAAA,OAAO,EAAE,kEAArB;AAAyFC,cAAAA,IAAI,EAAE,QAA/F;AAAyGC,cAAAA,MAAM,EAAE;AAAjH;AAAhB,WAAd;AACD,SAhBH;AAiBD;AACF,KAhHkB;;AAAA,UAkHnBP,WAlHmB,GAkHL,YAAM;AAClB,UAAI8C,IAAI,GAAG,CACT;AAAEjB,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,KAAK,EAAE;AAAxB,OADS,EAET;AAAED,QAAAA,IAAI,EAAE,YAAR;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OAFS,EAGT;AAAED,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OAHS,EAIT;AAAED,QAAAA,IAAI,EAAE,UAAR;AAAoBC,QAAAA,KAAK,EAAE;AAA3B,OAJS,EAKT;AAAED,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OALS,EAMT;AAAED,QAAAA,IAAI,EAAE,SAAR;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OANS,CAAX;AAQAlC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKsB,KAAL,CAAWpB,SAAvB;;AACA,YAAKoB,KAAL,CAAWpB,SAAX,CAAqBgD,OAArB,CAA6B,UAACtC,CAAD,EAAO;AAClCb,QAAAA,OAAO,CAACC,GAAR,CAAYY,CAAZ;;AACA,aAAK,IAAIuC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAG,CAAlB,EAAqBA,CAAC,EAAtB,EAA0B;AACxB,cAAIvC,CAAC,CAACI,QAAF,KAAeiC,IAAI,CAACE,CAAD,CAAJ,CAAQnB,IAA3B,EAAiC;AAC/BjC,YAAAA,OAAO,CAACC,GAAR,CAAYY,CAAC,CAACI,QAAd,EAAwBiC,IAAI,CAACE,CAAD,CAAJ,CAAQnB,IAAhC;AACAiB,YAAAA,IAAI,CAACE,CAAD,CAAJ,CAAQlB,KAAR,IAAiB,CAAjB;AACD;AACF;AACF,OARD;;AASAgB,MAAAA,IAAI,GAAGA,IAAI,CAACG,MAAL,CAAY,UAACD,CAAD,EAAO;AACxB,eAAOA,CAAC,CAAClB,KAAF,KAAY,CAAnB;AACD,OAFM,CAAP;;AAGA,YAAKhC,QAAL,CAAc;AAAEoD,QAAAA,UAAU,EAAEJ;AAAd,OAAd,EAAoC,YAAM;AAAElD,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAKsB,KAAL,CAAW+B,UAAvB;AAAoC,OAAhF;AACD,KAzIkB;;AAAA,UA2IjBC,qBA3IiB,GA2IO,gBAEtB;AAAA,UADJC,EACI,QADJA,EACI;AAAA,UADAC,EACA,QADAA,EACA;AAAA,UADIC,QACJ,QADIA,QACJ;AAAA,UADcC,WACd,QADcA,WACd;AAAA,UAD2BC,WAC3B,QAD2BA,WAC3B;AAAA,UADwCC,OACxC,QADwCA,OACxC;AAAA,UADiDC,KACjD,QADiDA,KACjD;AACH,UAAMC,MAAM,GAAG,KAAKJ,WAAL,IAAoBC,WAAW,GAAGD,WAAlC,CAAf;AACD,UAAMK,CAAC,GAAGR,EAAE,GAAGO,MAAM,GAAGE,IAAI,CAACC,GAAL,CAAS,CAACR,QAAD,GAAYS,MAArB,CAAxB;AACA,UAAMC,CAAC,GAAGX,EAAE,GAAGM,MAAM,GAAGE,IAAI,CAACI,GAAL,CAAS,CAACX,QAAD,GAAYS,MAArB,CAAxB;AAEA,aACE;AAAM,QAAA,CAAC,EAAEH,CAAT;AAAY,QAAA,CAAC,EAAEI,CAAf;AAAkB,QAAA,IAAI,EAAC,OAAvB;AAA+B,QAAA,UAAU,EAAEJ,CAAC,GAAGR,EAAJ,GAAS,OAAT,GAAmB,KAA9D;AAAqE,QAAA,gBAAgB,EAAC,QAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACM,MAAKjC,KAAL,CAAW+B,UAAX,CAAsBQ,KAAtB,EAA6B7B,IADnC,cAC2C,CAAC4B,OAAO,GAAG,GAAX,EAAgBS,OAAhB,CAAwB,CAAxB,CAD3C,OADF;AAKD,KAvJoB;;AAEjB,UAAK/C,KAAL,GAAa;AACXT,MAAAA,EAAE,EAAEzC,MAAM,CAACkG,GAAP,CAAW,IAAX,CADO;AAEXnG,MAAAA,SAAS,EAAEA,SAAS,EAFT;AAGXyE,MAAAA,UAAU,EAAExE,MAAM,CAACkG,GAAP,CAAW,YAAX,CAHD;AAIXpE,MAAAA,SAAS,EAAEvB,IAAI,CAAC,EAAD,CAJJ;AAKXmD,MAAAA,MAAM,EAAE;AACNhB,QAAAA,SAAS,EAAE,EADL;AAENC,QAAAA,QAAQ,EAAE,EAFJ;AAGNsB,QAAAA,KAAK,EAAE,EAHD;AAINC,QAAAA,QAAQ,EAAE,EAJJ;AAKNtB,QAAAA,QAAQ,EAAE,EALJ;AAMNG,QAAAA,MAAM,EAAE,EANF;AAONiB,QAAAA,QAAQ,EAAE,EAPJ;AAQNG,QAAAA,GAAG,EAAE,EARC;AASNjB,QAAAA,KAAK,EAAE,EATD;AAUNkB,QAAAA,OAAO,EAAE,EAVH;AAWNC,QAAAA,IAAI,EAAE,EAXA;AAYNC,QAAAA,IAAI,EAAE;AAZA,OALG;AAmBXrB,MAAAA,UAAU,EAAE,KAnBD;AAoBXG,MAAAA,UAAU,EAAE,KApBD;AAqBXE,MAAAA,oBAAoB,EAAE,KArBX;AAsBXpB,MAAAA,YAAY,EAAE;AAAEC,QAAAA,EAAE,EAAE,KAAN;AAAaC,QAAAA,OAAO,EAAE,EAAtB;AAA0BC,QAAAA,IAAI,EAAE,EAAhC;AAAoCC,QAAAA,MAAM,EAAE;AAA5C,OAtBH;AAuBX2C,MAAAA,UAAU,EAAE;AAvBD,KAAb;AAyBA,UAAK1C,MAAL,GAAc,MAAKA,MAAL,CAAY4D,IAAZ,+BAAd;AACA,UAAKnD,sBAAL,GAA8B,MAAKA,sBAAL,CAA4BmD,IAA5B,+BAA9B;AACA,UAAK5E,YAAL,GAAoB,MAAKA,YAAL,CAAkB4E,IAAlB,+BAApB;AACA,UAAK5C,kBAAL,GAA0B,MAAKA,kBAAL,CAAwB4C,IAAxB,+BAA1B;AACA,UAAKhD,sBAAL,GAA8B,MAAKA,sBAAL,CAA4BgD,IAA5B,+BAA9B;AACA,UAAKrC,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBqC,IAAxB,+BAA1B;AACA,UAAKjB,qBAAL,GAA6B,MAAKA,qBAAL,CAA2BiB,IAA3B,+BAA7B;AACA,UAAKpE,WAAL,GAAmB,MAAKA,WAAL,CAAiBoE,IAAjB,+BAAnB;AAlCiB;AAmChB;;;;wCAciB;AAChB,WAAK5E,YAAL,CAAkB;AAChBgD,QAAAA,SAAS,EAAE,KAAKrB,KAAL,CAAWT,EADN;AAEhB+B,QAAAA,UAAU,EAAE,KAAKtB,KAAL,CAAWsB;AAFP,OAAlB;AAID;;;6BAmGM;AAAA;;AACP,UAAMK,IAAI,GAAG,CACf;AACEjB,QAAAA,IAAI,EAAE,SADR;AACmBwC,QAAAA,QAAQ,EAAE,CAD7B;AACgCC,QAAAA,SAAS,EAAE;AAD3C,OADe,EAIf;AACEzC,QAAAA,IAAI,EAAE,UADR;AACoBwC,QAAAA,QAAQ,EAAE,CAD9B;AACiCC,QAAAA,SAAS,EAAE;AAD5C,OAJe,EAOf;AACEzC,QAAAA,IAAI,EAAE,OADR;AACiBwC,QAAAA,QAAQ,EAAE,CAD3B;AAC8BC,QAAAA,SAAS,EAAE;AADzC,OAPe,EAUf;AACEzC,QAAAA,IAAI,EAAE,OADR;AACiBwC,QAAAA,QAAQ,EAAE,EAD3B;AAC+BC,QAAAA,SAAS,EAAE,KAAKnD,KAAL,CAAWpB,SAAX,CAAqBwE;AAD/D,OAVe,EAaf;AACE1C,QAAAA,IAAI,EAAE,KADR;AACewC,QAAAA,QAAQ,EAAE,CADzB;AAC4BC,QAAAA,SAAS,EAAE;AADvC,OAbe,CAAb;AAiBA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAKnD,KAAL,CAAWhB,YAAX,CAAwBC,EAAxB,GAA8B,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAE,KAAKe,KAAL,CAAWhB,YAAX,CAAwBG,IAAxC;AAA8C,QAAA,WAAW,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA2D,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiB,KAAKa,KAAL,CAAWhB,YAAX,CAAwBI,MAAzC,CAA3D,EAA4H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKY,KAAL,CAAWhB,YAAX,CAAwBE,OAA7B,CAA5H,CAA9B,GAA+M,IADnN,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,IAAb;AAAkB,QAAA,OAAO,EAAC,SAA1B;AAAoC,QAAA,KAAK,EAAEmE,kBAA3C;AAA+D,QAAA,OAAO,EAAE,KAAKvD,sBAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,EAGE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,IAAb;AAAkB,QAAA,OAAO,EAAC,MAA1B;AAAiC,QAAA,KAAK,EAAEuD,kBAAxC;AAA4D,QAAA,OAAO,EAAE,KAAKpD,sBAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAHF,EAIE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAEoD,kBAAf;AAAmC,QAAA,IAAI,EAAC,IAAxC;AAA6C,QAAA,OAAO,EAAC,MAArD;AAA4D,QAAA,OAAO,EAAE,KAAKlD,gBAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAJF,CAFF,CADF,CAFF,EAcE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWI,oBAAxB;AAA8C,QAAA,IAAI,EAAC,IAAnD;AAAwD,QAAA,MAAM,EAAE,KAAKD,gBAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADF,CADA,EAIA,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,mBAAD;AAAqB,QAAA,KAAK,EAAE,MAA5B;AAAoC,QAAA,MAAM,EAAE,GAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,GAAjB;AAAsB,QAAA,MAAM,EAAE,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AACE,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAW+B,UADnB;AAEE,QAAA,EAAE,EAAE,GAFN;AAGE,QAAA,EAAE,EAAE,GAHN;AAIE,QAAA,KAAK,EAAE,KAAKC,qBAJd;AAKE,QAAA,WAAW,EAAE,GALf;AAME,QAAA,IAAI,EAAC,SANP;AAOE,QAAA,OAAO,EAAC,OAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUI,KAAKhC,KAAL,CAAWpB,SAAX,CAAqB0E,GAArB,CAAyB,UAACC,KAAD,EAAQhB,KAAR;AAAA,eAAkB,oBAAC,IAAD;AAAM,UAAA,GAAG,iBAAUA,KAAV,CAAT;AAA4B,UAAA,IAAI,EAAEiB,MAAM,CAACjB,KAAK,GAAGiB,MAAM,CAACC,MAAhB,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAlB;AAAA,OAAzB,CAVJ,CADF,CADF,CADF,CAJA,EAuBA,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAvBA,CAdF,EAyCE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAE,KAAKzD,KAAL,CAAWD,UAAxB;AAAoC,QAAA,MAAM,EAAE,KAAKD,sBAAjD;AAAyE,QAAA,IAAI,EAAC,WAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADA,CADF,EAIE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,EAAE,EAAE5C,GAAhB;AAAqB,QAAA,SAAS,EAAC,mBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,WAAW,EAAC,MAA1B;AAAiC,QAAA,IAAI,EAAC,WAAtC;AAAkD,QAAA,KAAK,EAAE,KAAK8C,KAAL,CAAWQ,MAAX,CAAkBhB,SAA3E;AAAsF,QAAA,QAAQ,EAAE,KAAKa,kBAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAKE,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,EAAE,EAAEnD,GAAhB;AAAqB,QAAA,SAAS,EAAC,kBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,WAAW,EAAC,OAA1B;AAAkC,QAAA,IAAI,EAAC,UAAvC;AAAkD,QAAA,KAAK,EAAE,KAAK8C,KAAL,CAAWQ,MAAX,CAAkBf,QAA3E;AAAqF,QAAA,QAAQ,EAAE,KAAKY,kBAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CALF,CADF,EAWE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,EAAE,EAAEnD,GAAhB;AAAqB,QAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,WAAW,EAAC,qBAA1B;AAAgD,QAAA,IAAI,EAAC,OAArD;AAA6D,QAAA,KAAK,EAAE,KAAK8C,KAAL,CAAWQ,MAAX,CAAkBO,KAAtF;AAA6F,QAAA,QAAQ,EAAE,KAAKV,kBAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAKE,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,EAAE,EAAEnD,GAAhB;AAAqB,QAAA,SAAS,EAAC,kBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,IAAI,EAAC,UAAnB;AAA8B,QAAA,WAAW,EAAC,UAA1C;AAAqD,QAAA,IAAI,EAAC,UAA1D;AAAqE,QAAA,KAAK,EAAE,KAAK8C,KAAL,CAAWQ,MAAX,CAAkBQ,QAA9F;AAAwG,QAAA,QAAQ,EAAE,KAAKX,kBAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CALF,CAXF,EAqBE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,EAAE,EAAEnD,GAAhB;AAAqB,QAAA,SAAS,EAAC,kBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,WAAW,EAAC,OAA1B;AAAkC,QAAA,IAAI,EAAC,UAAvC;AAAkD,QAAA,KAAK,EAAE,KAAK8C,KAAL,CAAWQ,MAAX,CAAkBd,QAA3E;AAAqF,QAAA,QAAQ,EAAE,KAAKW,kBAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAKE,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,EAAE,EAAEnD,GAAhB;AAAqB,QAAA,SAAS,EAAC,gBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,WAAW,EAAC,OAA1B;AAAkC,QAAA,IAAI,EAAC,QAAvC;AAAgD,QAAA,KAAK,EAAE,KAAK8C,KAAL,CAAWQ,MAAX,CAAkBX,MAAzE;AAAiF,QAAA,QAAQ,EAAE,KAAKQ,kBAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CALF,EASE,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,EAAE,EAAEnD,GAAhB;AAAqB,QAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,WAAW,EAAC,aAA1B;AAAwC,QAAA,IAAI,EAAC,UAA7C;AAAwD,QAAA,KAAK,EAAE,KAAK8C,KAAL,CAAWQ,MAAX,CAAkBM,QAAjF;AAA2F,QAAA,QAAQ,EAAE,KAAKT,kBAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CATF,CArBF,EAmCE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,EAAE,EAAEnD,GAAhB;AAAqB,QAAA,SAAS,EAAC,iBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,WAAW,EAAC,cAA1B;AAAyC,QAAA,IAAI,EAAC,SAA9C;AAAwD,QAAA,KAAK,EAAE,KAAK8C,KAAL,CAAWQ,MAAX,CAAkBU,OAAjF;AAA0F,QAAA,QAAQ,EAAE,KAAKb,kBAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAKE,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,EAAE,EAAEnD,GAAhB;AAAqB,QAAA,SAAS,EAAC,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,WAAW,EAAC,SAA1B;AAAoC,QAAA,IAAI,EAAC,MAAzC;AAAgD,QAAA,KAAK,EAAE,KAAK8C,KAAL,CAAWQ,MAAX,CAAkBW,IAAzE;AAA+E,QAAA,QAAQ,EAAE,KAAKd,kBAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CALF,CAnCF,EA6CE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,EAAE,EAAEnD,GAAhB;AAAqB,QAAA,SAAS,EAAC,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,WAAW,EAAC,OAA1B;AAAkC,QAAA,IAAI,EAAC,KAAvC;AAA6C,QAAA,KAAK,EAAE,KAAK8C,KAAL,CAAWQ,MAAX,CAAkBS,GAAtE;AAA2E,QAAA,QAAQ,EAAE,KAAKZ,kBAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAKE,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,EAAE,EAAEnD,GAAhB;AAAqB,QAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,IAAI,EAAC,OAAnB;AAA2B,QAAA,KAAK,EAAE,KAAK8C,KAAL,CAAWQ,MAAX,CAAkBR,KAApD;AAA2D,QAAA,QAAQ,EAAE,KAAKK,kBAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CALF,EASE,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,EAAE,EAAEnD,GAAhB;AAAqB,QAAA,SAAS,EAAC,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,EAAE,EAAC,QAAjB;AAA0B,QAAA,IAAI,EAAC,MAA/B;AAAsC,QAAA,KAAK,EAAE,KAAK8C,KAAL,CAAWQ,MAAX,CAAkBY,IAA/D;AAAqE,QAAA,QAAQ,EAAE,KAAKf,kBAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,CAFF,CATF,CA7CF,CAJF,EAqEE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,OAAO,EAAE,KAAKO,kBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CArEF,CAzCF,EAmHE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWE,UAAxB;AAAoC,QAAA,MAAM,EAAE,KAAKD,sBAAjD;AAAyE,QAAA,IAAI,EAAC,YAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADA,CADF,EAIE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,KAAK,EAAE,GADT;AAEE,QAAA,MAAM,EAAE,GAFV;AAGE,QAAA,IAAI,EAAE0B,IAHR;AAIE,QAAA,MAAM,EAAE;AACN+B,UAAAA,GAAG,EAAE,CADC;AACEC,UAAAA,KAAK,EAAE,EADT;AACaC,UAAAA,IAAI,EAAE,EADnB;AACuBC,UAAAA,MAAM,EAAE;AAD/B,SAJV;AAOE,QAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,EAAE;AAAb,SAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASA,oBAAC,aAAD;AAAe,QAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATA,EAUA,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVA,EAWA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXA,EAYA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZA,EAaA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbA,EAcA,oBAAC,GAAD;AAAK,QAAA,OAAO,EAAC,UAAb;AAAwB,QAAA,IAAI,EAAC,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdA,EAeA,oBAAC,GAAD;AAAK,QAAA,OAAO,EAAC,WAAb;AAAyB,QAAA,IAAI,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfA,CADF,CAJF,CAnHF,EA4IE;AAAI,QAAA,KAAK,EAAEC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBA5IF,EA6IE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEC,UAAd;AAA0B,QAAA,OAAO,MAAjC;AAAkC,QAAA,QAAQ,MAA1C;AAA2C,QAAA,KAAK,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBARF,CADF,CADF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,KAAKhE,KAAL,CAAWpB,SAAX,CAAqB0E,GAArB,CAAyB,UAAChE,CAAD,EAAO;AAAE,eAAO,MAAI,CAACD,MAAL,CAAYC,CAAZ,EAAeA,CAAC,CAACC,EAAjB,CAAP;AAA6B,OAA/D,CADF,CAbF,CA7IF,CADF;AAiKC;;;;EA7UiB3C,KAAK,CAACqH,S;;AAgV5B,IAAMD,UAAU,GAAG;AACjBE,EAAAA,MAAM,EAAE,QADS;AAEjBC,EAAAA,SAAS,EAAE;AAFM,CAAnB;AAKA,IAAMd,kBAAkB,GAAG;AACzBe,EAAAA,WAAW,EAAE;AADY,CAA3B;AAIA,IAAML,OAAO,GAAG;AACdM,EAAAA,SAAS,EAAE;AADG,CAAhB;AAIA,IAAMb,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,CAAf;AAEA,IAAMZ,MAAM,GAAGF,IAAI,CAAC4B,EAAL,GAAU,GAAzB;AAGA,eAAenG,OAAf","sourcesContent":["import React from 'react'\nimport { isManager } from '../../utils/auth'\nimport Cookie from 'js-cookie'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport Table from 'react-bootstrap/Table'\nimport { List } from 'immutable'\nimport { apiPost } from '../../utils/api'\nimport Alert from 'react-bootstrap/Alert';\nimport {\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, PieChart, Pie, Cell,\n} from 'recharts';\n\n\nclass Manager extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: Cookie.get('id'),\n      isManager: isManager(),\n      facilityID: Cookie.get('facilityID'),\n      employees: List([]),\n      newEmp: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        position: '',\n        salary: '',\n        phoneNum: '',\n        zip: '',\n        state: '',\n        address: '',\n        city: '',\n        role: 'Choose...',\n      },\n      showNewEmp: false,\n      showReport: false,\n      showPackStatusReport: false,\n      notification: { is: false, message: '', type: '', header: '' },\n      statusData: [],\n};\n    this.makeTR = this.makeTR.bind(this);\n    this.handleChangeNewEmpView = this.handleChangeNewEmpView.bind(this);\n    this.getEmployees = this.getEmployees.bind(this);\n    this.handleNewEmpChange = this.handleNewEmpChange.bind(this);\n    this.handleChangeReportView = this.handleChangeReportView.bind(this);\n    this.handleNewEmpSubmit = this.handleNewEmpSubmit.bind(this);\n    this.renderCustomizedLabel = this.renderCustomizedLabel.bind(this);\n    this.computeData = this.computeData.bind(this);\n    }\n\n  getEmployees = (payload) => {\n    apiPost('/facility/employees', payload)\n        .then((resp) => {\n          console.log(resp);\n          this.setState({ employees: List(resp.employees) }, this.computeData)\n        })\n        .catch((error) => {\n          this.setState({ notification: { is: true, message: 'Could not get employees', type: 'danger', header: 'Error!' } })\n\n        })\n  };\n\n  componentDidMount() {\n      this.getEmployees({\n        managerID: this.state.id,\n        facilityID: this.state.facilityID,\n      });\n    };\n\n  makeTR = (e, id) => {\n      return (\n        <React.Fragment key={id}>\n          <tr>\n            <td> { e.id } </td>\n            <td> { e.firstName } </td>\n            <td> { e.lastName } </td>\n            <td> { e.position } </td>\n            <td> { e.workPhoneNum } </td>\n            <td> { e.workEmail } </td>\n            <td> { e.salary } </td>\n            <td> <Button variant='info' href={'/employee/edit#' + e.id}>Edit</Button> </td>\n          </tr>\n        </React.Fragment>)\n  };\n\n  handleChangeNewEmpView = () => {\n    this.setState({ showNewEmp: !this.state.showNewEmp })\n  };\n\n  handleChangeReportView = () => {\n    this.setState({ showReport: !this.state.showReport })\n  };\n\n  openStatusReport = () => {\n    this.setState({ showPackStatusReport: !this.state.showPackStatusReport })\n  };\n\n  handleNewEmpChange = (event) => {\n    let newEmpObj = this.state.newEmp;\n    newEmpObj[event.target.name] = event.target.value;\n    this.setState({ newEmp: newEmpObj })\n  };\n\n  handleNewEmpSubmit = () => {\n    console.log(this.state.newEmp);\n    const emp = this.state.newEmp;\n    if (emp.phoneNum && emp.email && emp.password && emp.firstName && emp.lastName && emp.position && emp.salary && emp.zip && emp.address && emp.state && emp.city && emp.role && emp.role !== 'Choose...') {\n      apiPost('/manager/addEmployee', {\n        managerID: this.state.id,\n        facilityID: this.state.facilityID,\n        ...this.state.newEmp\n      })\n        .then((resp) => {\n          console.log(resp);\n          if (resp.success === true) {\n            window.location.reload()\n          } else {\n            this.setState({ notification: { is: true, message: 'Could not add employee. Invalid input or employee already exist.', type: 'danger', header: 'Error!' } })\n          }\n        })\n        .catch(error => {\n          this.setState({ showNewEmp: false })\n          this.setState({ notification: { is: true, message: 'Could not add employee. Invalid input or employee already exist.', type: 'danger', header: 'Error!' } })\n        })\n    }\n  };\n\n  computeData = () => {\n    let data = [\n      { name: 'Clerk', value: 0 },\n      { name: 'Supervisor', value: 0 },\n      { name: 'Sorter', value: 0 },\n      { name: 'Security', value: 0 },\n      { name: 'Driver', value: 0 },\n      { name: 'Carrier', value: 0 }\n    ];\n    console.log(this.state.employees);\n    this.state.employees.forEach((e) => {\n      console.log(e)\n      for (let i=0; i < 6; i++) {\n        if (e.position === data[i].name) {\n          console.log(e.position, data[i].name);\n          data[i].value += 1\n        }\n      }\n    });\n    data = data.filter((i) => {\n      return i.value !== 0\n    });\n    this.setState({ statusData: data }, () => { console.log(this.state.statusData) })\n  };\n\n    renderCustomizedLabel = ({\n  cx, cy, midAngle, innerRadius, outerRadius, percent, index,\n}) => {\n   const radius = 25 + innerRadius + (outerRadius - innerRadius);\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <text x={x} y={y} fill=\"black\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"middle\">\n      {`${this.state.statusData[index].name} ${(percent * 100).toFixed(0)}%`}\n    </text>\n  );\n};\n\n  render() {\n    const data = [\n  {\n    name: 'January', Packages: 0, Employees: 0,\n  },\n  {\n    name: 'February', Packages: 0, Employees: 2,\n  },\n  {\n    name: 'March', Packages: 4, Employees: 3,\n  },\n  {\n    name: 'April', Packages: 12, Employees: this.state.employees.size,\n  },\n  {\n    name: 'May', Packages: 0, Employees: 0,\n  },\n];\n    return (\n      <div>\n        { this.state.notification.is ? (<Alert variant={this.state.notification.type} dismissible> <Alert.Heading>{ this.state.notification.header }</Alert.Heading><p>{ this.state.notification.message }</p></Alert>): null }\n        <div>\n          <Card className=\"text-center\">\n            <Card.Header>Control Center</Card.Header>\n            <Card.Body>\n              <Card.Title>Managerial Actions</Card.Title>\n              <Button size='lg' variant=\"success\" style={ControlButtonStyle} onClick={this.handleChangeNewEmpView}>Add Employee</Button>\n              <Button size='lg' variant=\"info\" style={ControlButtonStyle} onClick={this.handleChangeReportView}>Review Facility Report</Button>\n              <Button style={ControlButtonStyle} size='lg' variant='dark' onClick={this.openStatusReport}>Review Employee Role Report</Button>\n            </Card.Body>\n          </Card>\n        </div>\n\n        <Modal show={this.state.showPackStatusReport} size='lg' onHide={this.openStatusReport}>\n        <Modal.Header closeButton>\n          <Modal.Title>Customer Package Status Report</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <ResponsiveContainer width={'100%'} height={400}>\n            <PieChart width={500} height={500}>\n              <Pie\n                data={this.state.statusData}\n                cx={375}\n                cy={200}\n                label={this.renderCustomizedLabel}\n                outerRadius={120}\n                fill=\"#8884d8\"\n                dataKey=\"value\"\n              >\n                {\n                  this.state.employees.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n                }\n              </Pie>\n            </PieChart>\n          </ResponsiveContainer>\n        </Modal.Body>\n        <Modal.Footer>\n        </Modal.Footer>\n      </Modal>\n\n        <Modal show={this.state.showNewEmp} onHide={this.handleChangeNewEmpView} name='CreateEmp'>\n          <Modal.Header closeButton>\n          <Modal.Title>Add New Employee</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form.Row>\n              <Form.Group as={Col} controlId='formGridFirstName'>\n                <Form.Label> First Name </Form.Label>\n                <Form.Control placeholder='John' name='firstName' value={this.state.newEmp.firstName} onChange={this.handleNewEmpChange} />\n              </Form.Group>\n              <Form.Group as={Col} controlId='formGridLastName'>\n                <Form.Label> Last Name </Form.Label>\n                <Form.Control placeholder='Smith' name='lastName' value={this.state.newEmp.lastName} onChange={this.handleNewEmpChange}  />\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col} controlId='formGridEmail'>\n                <Form.Label> Work Email </Form.Label>\n                <Form.Control placeholder='example@website.com' name='email' value={this.state.newEmp.email} onChange={this.handleNewEmpChange} />\n              </Form.Group>\n              <Form.Group as={Col} controlId='formGridPassword'>\n                <Form.Label> Password </Form.Label>\n                <Form.Control type='password' placeholder='********' name='password' value={this.state.newEmp.password} onChange={this.handleNewEmpChange}  />\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col} controlId='formGridPosition'>\n                <Form.Label> Position </Form.Label>\n                <Form.Control placeholder='Clerk' name='position' value={this.state.newEmp.position} onChange={this.handleNewEmpChange} />\n              </Form.Group>\n              <Form.Group as={Col} controlId='formGridSalary'>\n                <Form.Label> Salary </Form.Label>\n                <Form.Control placeholder='60000' name='salary' value={this.state.newEmp.salary} onChange={this.handleNewEmpChange}  />\n              </Form.Group>\n              <Form.Group as={Col} controlId='formGridPhone'>\n                <Form.Label> Work Phone </Form.Label>\n                <Form.Control placeholder='832-123-123' name='phoneNum' value={this.state.newEmp.phoneNum} onChange={this.handleNewEmpChange}  />\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col} controlId='formGridAddress'>\n                <Form.Label> Address </Form.Label>\n                <Form.Control placeholder='123 Main St.' name='address' value={this.state.newEmp.address} onChange={this.handleNewEmpChange}  />\n              </Form.Group>\n              <Form.Group as={Col} controlId='formGridCity'>\n                <Form.Label> City </Form.Label>\n                <Form.Control placeholder='Houston' name='city' value={this.state.newEmp.city} onChange={this.handleNewEmpChange}  />\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col} controlId='formGridZip'>\n                <Form.Label> Zip </Form.Label>\n                <Form.Control placeholder='77023' name='zip' value={this.state.newEmp.zip} onChange={this.handleNewEmpChange}  />\n              </Form.Group>\n              <Form.Group as={Col} controlId='formGridState'>\n                <Form.Label> State </Form.Label>\n                <Form.Control name='state' value={this.state.newEmp.state} onChange={this.handleNewEmpChange}  />\n              </Form.Group>\n              <Form.Group as={Col} controlId=\"formGridRole\">\n                <Form.Label> Role </Form.Label>\n                <Form.Control as=\"select\" name='role' value={this.state.newEmp.role} onChange={this.handleNewEmpChange}>\n                  <option>Choose...</option>\n                  <option>Supervisor</option>\n                  <option>Driver</option>\n                  <option>Facility</option>\n                </Form.Control>\n              </Form.Group>\n            </Form.Row>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant='success' onClick={this.handleNewEmpSubmit}> Submit </Button>\n          </Modal.Footer>\n        </Modal>\n\n        <Modal show={this.state.showReport} onHide={this.handleChangeReportView} name='ShowReport'>\n          <Modal.Header closeButton>\n          <Modal.Title>Review Facility Report</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <BarChart\n              width={500}\n              height={300}\n              data={data}\n              margin={{\n                top: 5, right: 30, left: 20, bottom: 5,\n              }}\n              style={{marginLeft: '-7%'}}\n            >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Bar dataKey=\"Packages\" fill=\"#8884d8\" />\n            <Bar dataKey=\"Employees\" fill=\"#82ca9d\" />\n            </BarChart>\n          </Modal.Body>\n        </Modal>\n\n        <h3 style={h3Style}>Employees</h3>\n        <Table style={tableStyle} striped bordered hover>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>First Name</th>\n              <th>Last Name</th>\n              <th>Position</th>\n              <th>Work Phone</th>\n              <th>Work Email</th>\n              <th>Salary</th>\n              <th>Edit Employee</th>\n            </tr>\n          </thead>\n          <tbody>\n          { this.state.employees.map((e) => { return this.makeTR(e, e.id) }) }\n          </tbody>\n    </Table>\n      </div>\n    )\n    }\n}\n\nconst tableStyle = {\n  margin: '0 auto',\n  textAlign: \"center\",\n};\n\nconst ControlButtonStyle = {\n  marginRight: '16px',\n};\n\nconst h3Style = {\n  marginTop: '2.5%',\n};\n\nconst COLORS = ['#fe00de', '#00C49F', '#84fffa', '#FF8042', '#00C49F', '#FFBB28', '#FF8042'];\n\nconst RADIAN = Math.PI / 180;\n\n\nexport default Manager;"]},"metadata":{},"sourceType":"module"}