{"ast":null,"code":"import _objectSpread from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/cash/Documents/PostOffice/Frontend-React/src/containers/editEmployee/index.js\";\nimport React from 'react';\nimport { isManager } from '../../utils/auth';\nimport Cookie from 'js-cookie';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Table from 'react-bootstrap/Table';\nimport { List } from 'immutable';\nimport { apiPost } from '../../utils/api';\nimport Alert from 'react-bootstrap/Alert';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nvar EditEmployee =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditEmployee, _React$Component);\n\n  function EditEmployee(props) {\n    var _this;\n\n    _classCallCheck(this, EditEmployee);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditEmployee).call(this, props));\n\n    _this.getEmployee = function () {\n      apiPost('/employee/info', {\n        id: _this.state.id\n      }).then(function (resp) {\n        _this.setState({\n          newEmp: {\n            resp: resp\n          }\n        });\n      }).catch(function (error) {\n        _this.setState({\n          notification: {\n            is: true,\n            message: 'Could not edit employee.',\n            type: 'danger',\n            header: 'Error!'\n          }\n        });\n      });\n    };\n\n    _this.handleNewEmpChange = function (event) {\n      var newEmpObj = _this.state.newEmp;\n      newEmpObj[event.target.name] = event.target.value;\n\n      _this.setState({\n        newEmp: newEmpObj\n      });\n    };\n\n    _this.handleUpdateSubmit = function () {\n      var emp = _this.state.newEmp;\n\n      if (emp.phoneNum && emp.email && emp.password && emp.firstName && emp.lastName && emp.position && emp.salary && emp.zip && emp.address && emp.state && emp.city && emp.role && emp.role !== 'Choose...') {\n        apiPost('/employee/update', _objectSpread({\n          id: _this.state.id\n        }, _this.state.newEmp)).then(function (resp) {\n          console.log(resp);\n\n          if (resp.success === true) {\n            _this.setState({\n              notification: {\n                is: true,\n                message: 'Changed employee information.',\n                type: 'success',\n                header: 'Success!'\n              }\n            });\n          } else {\n            _this.setState({\n              notification: {\n                is: true,\n                message: 'Could not add employee. Invalid input or employee already exist.',\n                type: 'danger',\n                header: 'Error!'\n              }\n            });\n          }\n        }).catch(function (error) {\n          _this.setState({\n            notification: {\n              is: true,\n              message: 'Could not add employee. Invalid input or employee already exist.',\n              type: 'danger',\n              header: 'Error!'\n            }\n          });\n        });\n      }\n    };\n\n    _this.state = {\n      id: props.location.hash ? props.location.hash.substr(1) : undefined,\n      newEmp: {\n        firstName: '',\n        lastName: '',\n        workEmail: '',\n        password: '',\n        position: '',\n        salary: '',\n        workPhoneNum: '',\n        zip: '',\n        state: '',\n        address: '',\n        city: '',\n        role: 'Choose...'\n      },\n      notification: {\n        is: false,\n        message: '',\n        type: '',\n        header: ''\n      }\n    };\n    _this.getEmployee = _this.getEmployee.bind(_assertThisInitialized(_this));\n    _this.handleNewEmpChange = _this.handleNewEmpChange.bind(_assertThisInitialized(_this));\n    _this.handleUpdateSubmit = _this.handleUpdateSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(EditEmployee, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: formStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridFirstName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \" First Name \"), React.createElement(Form.Control, {\n        placeholder: \"John\",\n        name: \"firstName\",\n        value: this.state.newEmp.firstName,\n        onChange: this.handleNewEmpChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridLastName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \" Last Name \"), React.createElement(Form.Control, {\n        placeholder: \"Smith\",\n        name: \"lastName\",\n        value: this.state.newEmp.lastName,\n        onChange: this.handleNewEmpChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \" Work Email \"), React.createElement(Form.Control, {\n        placeholder: \"example@website.com\",\n        name: \"email\",\n        value: this.state.newEmp.email,\n        onChange: this.handleNewEmpChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \" Password \"), React.createElement(Form.Control, {\n        type: \"password\",\n        placeholder: \"********\",\n        name: \"password\",\n        value: this.state.newEmp.password,\n        onChange: this.handleNewEmpChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridPosition\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \" Position \"), React.createElement(Form.Control, {\n        placeholder: \"Clerk\",\n        name: \"position\",\n        value: this.state.newEmp.position,\n        onChange: this.handleNewEmpChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridSalary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \" Salary \"), React.createElement(Form.Control, {\n        placeholder: \"60000\",\n        name: \"salary\",\n        value: this.state.newEmp.salary,\n        onChange: this.handleNewEmpChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridPhone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \" Work Phone \"), React.createElement(Form.Control, {\n        placeholder: \"832-123-123\",\n        name: \"phoneNum\",\n        value: this.state.newEmp.phoneNum,\n        onChange: this.handleNewEmpChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridAddress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \" Address \"), React.createElement(Form.Control, {\n        placeholder: \"123 Main St.\",\n        name: \"address\",\n        value: this.state.newEmp.address,\n        onChange: this.handleNewEmpChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridCity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \" City \"), React.createElement(Form.Control, {\n        placeholder: \"Houston\",\n        name: \"city\",\n        value: this.state.newEmp.city,\n        onChange: this.handleNewEmpChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridZip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \" Zip \"), React.createElement(Form.Control, {\n        placeholder: \"77023\",\n        name: \"zip\",\n        value: this.state.newEmp.zip,\n        onChange: this.handleNewEmpChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridState\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \" State \"), React.createElement(Form.Control, {\n        name: \"state\",\n        value: this.state.newEmp.state,\n        onChange: this.handleNewEmpChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridRole\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \" Role \"), React.createElement(Form.Control, {\n        as: \"select\",\n        name: \"role\",\n        value: this.state.newEmp.role,\n        onChange: this.handleNewEmpChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Choose...\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Supervisor\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Driver\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Facility\")))));\n    }\n  }]);\n\n  return EditEmployee;\n}(React.Component);\n\nvar formStyle = {\n  margin: '0 auto',\n  marginTop: '3%',\n  textAlign: 'center',\n  width: '60%'\n};\nexport default EditEmployee;","map":{"version":3,"sources":["/home/cash/Documents/PostOffice/Frontend-React/src/containers/editEmployee/index.js"],"names":["React","isManager","Cookie","Button","Modal","Form","Col","Card","Table","List","apiPost","Alert","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","EditEmployee","props","getEmployee","id","state","then","resp","setState","newEmp","catch","error","notification","is","message","type","header","handleNewEmpChange","event","newEmpObj","target","name","value","handleUpdateSubmit","emp","phoneNum","email","password","firstName","lastName","position","salary","zip","address","city","role","console","log","success","location","hash","substr","undefined","workEmail","workPhoneNum","bind","formStyle","Component","margin","marginTop","textAlign","width"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { isManager } from '../../utils/auth'\nimport Cookie from 'js-cookie'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport Table from 'react-bootstrap/Table'\nimport { List } from 'immutable'\nimport { apiPost } from '../../utils/api'\nimport Alert from 'react-bootstrap/Alert';\nimport {\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\n\nclass EditEmployee extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: props.location.hash ? props.location.hash.substr(1) : undefined,\n      newEmp: {\n        firstName: '',\n        lastName: '',\n        workEmail: '',\n        password: '',\n        position: '',\n        salary: '',\n        workPhoneNum: '',\n        zip: '',\n        state: '',\n        address: '',\n        city: '',\n        role: 'Choose...',\n      },\n      notification: { is: false, message: '', type: '', header: '' }\n};\n    this.getEmployee = this.getEmployee.bind(this);\n    this.handleNewEmpChange = this.handleNewEmpChange.bind(this);\n    this.handleUpdateSubmit = this.handleUpdateSubmit.bind(this);\n    }\n\n  getEmployee = () => {\n    apiPost('/employee/info', { id: this.state.id })\n        .then((resp) => {\n          this.setState({ newEmp: {resp} })\n        })\n        .catch((error) => {\n          this.setState({ notification: { is: true, message: 'Could not edit employee.', type: 'danger', header: 'Error!' } })\n        })\n  };\n\n  handleNewEmpChange = (event) => {\n    let newEmpObj = this.state.newEmp;\n    newEmpObj[event.target.name] = event.target.value;\n    this.setState({ newEmp: newEmpObj })\n  };\n\n  componentDidMount() {\n\n    };\n\n    handleUpdateSubmit = () => {\n    const emp = this.state.newEmp;\n    if (emp.phoneNum && emp.email && emp.password && emp.firstName && emp.lastName && emp.position && emp.salary && emp.zip && emp.address && emp.state && emp.city && emp.role && emp.role !== 'Choose...') {\n      apiPost('/employee/update', {\n        id: this.state.id,\n        ...this.state.newEmp\n      })\n        .then((resp) => {\n          console.log(resp);\n          if (resp.success === true) {\n            this.setState({ notification: { is: true, message: 'Changed employee information.', type: 'success', header: 'Success!' } })\n          } else {\n            this.setState({ notification: { is: true, message: 'Could not add employee. Invalid input or employee already exist.', type: 'danger', header: 'Error!' } })\n          }\n        })\n        .catch(error => {\n          this.setState({ notification: { is: true, message: 'Could not add employee. Invalid input or employee already exist.', type: 'danger', header: 'Error!' } })\n        })\n    }\n  };\n\n  render() {\n    return (\n      <div style={formStyle}>\n        <Form.Row>\n            <Form.Group as={Col} controlId='formGridFirstName'>\n              <Form.Label> First Name </Form.Label>\n              <Form.Control placeholder='John' name='firstName' value={this.state.newEmp.firstName} onChange={this.handleNewEmpChange} />\n            </Form.Group>\n            <Form.Group as={Col} controlId='formGridLastName'>\n              <Form.Label> Last Name </Form.Label>\n              <Form.Control placeholder='Smith' name='lastName' value={this.state.newEmp.lastName} onChange={this.handleNewEmpChange}  />\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col} controlId='formGridEmail'>\n              <Form.Label> Work Email </Form.Label>\n              <Form.Control placeholder='example@website.com' name='email' value={this.state.newEmp.email} onChange={this.handleNewEmpChange} />\n            </Form.Group>\n            <Form.Group as={Col} controlId='formGridPassword'>\n              <Form.Label> Password </Form.Label>\n              <Form.Control type='password' placeholder='********' name='password' value={this.state.newEmp.password} onChange={this.handleNewEmpChange}  />\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col} controlId='formGridPosition'>\n              <Form.Label> Position </Form.Label>\n              <Form.Control placeholder='Clerk' name='position' value={this.state.newEmp.position} onChange={this.handleNewEmpChange} />\n            </Form.Group>\n            <Form.Group as={Col} controlId='formGridSalary'>\n              <Form.Label> Salary </Form.Label>\n              <Form.Control placeholder='60000' name='salary' value={this.state.newEmp.salary} onChange={this.handleNewEmpChange}  />\n            </Form.Group>\n            <Form.Group as={Col} controlId='formGridPhone'>\n              <Form.Label> Work Phone </Form.Label>\n              <Form.Control placeholder='832-123-123' name='phoneNum' value={this.state.newEmp.phoneNum} onChange={this.handleNewEmpChange}  />\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col} controlId='formGridAddress'>\n              <Form.Label> Address </Form.Label>\n              <Form.Control placeholder='123 Main St.' name='address' value={this.state.newEmp.address} onChange={this.handleNewEmpChange}  />\n            </Form.Group>\n            <Form.Group as={Col} controlId='formGridCity'>\n              <Form.Label> City </Form.Label>\n              <Form.Control placeholder='Houston' name='city' value={this.state.newEmp.city} onChange={this.handleNewEmpChange}  />\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col} controlId='formGridZip'>\n              <Form.Label> Zip </Form.Label>\n              <Form.Control placeholder='77023' name='zip' value={this.state.newEmp.zip} onChange={this.handleNewEmpChange}  />\n            </Form.Group>\n            <Form.Group as={Col} controlId='formGridState'>\n              <Form.Label> State </Form.Label>\n              <Form.Control name='state' value={this.state.newEmp.state} onChange={this.handleNewEmpChange}  />\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"formGridRole\">\n              <Form.Label> Role </Form.Label>\n              <Form.Control as=\"select\" name='role' value={this.state.newEmp.role} onChange={this.handleNewEmpChange}>\n                <option>Choose...</option>\n                <option>Supervisor</option>\n                <option>Driver</option>\n                <option>Facility</option>\n              </Form.Control>\n            </Form.Group>\n          </Form.Row>\n      </div>\n    )\n    }\n}\n\nconst formStyle = {\n  margin: '0 auto',\n  marginTop: '3%',\n  textAlign: 'center',\n  width: '60%'\n};\n\n\n\n\nexport default EditEmployee;"]},"metadata":{},"sourceType":"module"}