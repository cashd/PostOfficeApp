{"ast":null,"code":"import _classCallCheck from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/cash/Documents/PostOffice/Frontend-React/src/containers/employeeHome/index.js\";\nimport React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { getRoleCookie } from '../../reducers/employeeHome';\nimport EmpFacility from '../empFacility';\nimport EmpDriver from '../empDriver';\nimport { isManager } from '../../utils/auth';\n\nvar EmployeeHome =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EmployeeHome, _React$Component);\n\n  function EmployeeHome(props) {\n    var _this;\n\n    _classCallCheck(this, EmployeeHome);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EmployeeHome).call(this, props));\n\n    _this.props.getRoleCookie();\n\n    return _this;\n  }\n\n  _createClass(EmployeeHome, [{\n    key: \"render\",\n    value: function render() {\n      var empType;\n\n      if (this.props.truckID) {\n        empType = React.createElement(EmpDriver, {\n          info: {\n            isManager: this.props.isManager,\n            id: this.props.id,\n            truckID: this.props.truckID\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        });\n      } else if (this.props.facilityID && isManager()) {\n        empType = React.createElement(EmpFacility, {\n          info: {\n            isManager: this.props.isManager,\n            id: this.props.id,\n            facilityID: this.props.facilityID\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        });\n      } else if (this.props.facilityID && !isManager()) {\n        empType = React.createElement(EmpFacility, {\n          info: {\n            isManager: this.props.isManager,\n            id: this.props.id,\n            facilityID: this.props.facilityID\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        });\n      } else {\n        empType = React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, \"You are not assigned to a facility or truck.\");\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, empType);\n    }\n  }]);\n\n  return EmployeeHome;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var employeeHome = _ref.employeeHome;\n  return {\n    role: employeeHome.role,\n    truckID: employeeHome.truckID,\n    facilityID: employeeHome.facilityID,\n    id: employeeHome.id,\n    isManager: employeeHome.isManager\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getRoleCookie: getRoleCookie\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeeHome);","map":{"version":3,"sources":["/home/cash/Documents/PostOffice/Frontend-React/src/containers/employeeHome/index.js"],"names":["React","bindActionCreators","connect","getRoleCookie","EmpFacility","EmpDriver","isManager","EmployeeHome","props","empType","truckID","id","facilityID","Component","mapStateToProps","employeeHome","role","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;IAGMC,Y;;;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,sFAAMA,KAAN;;AACA,UAAKA,KAAL,CAAWL,aAAX;;AAFiB;AAGhB;;;;6BAEM;AACP,UAAIM,OAAJ;;AACA,UAAI,KAAKD,KAAL,CAAWE,OAAf,EAAwB;AACtBD,QAAAA,OAAO,GAAG,oBAAC,SAAD;AAAW,UAAA,IAAI,EAAE;AACzBH,YAAAA,SAAS,EAAE,KAAKE,KAAL,CAAWF,SADG;AAEzBK,YAAAA,EAAE,EAAE,KAAKH,KAAL,CAAWG,EAFU;AAGzBD,YAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWE;AAHK,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAV;AAID,OALD,MAMK,IAAI,KAAKF,KAAL,CAAWI,UAAX,IAAyBN,SAAS,EAAtC,EAA0C;AAC7CG,QAAAA,OAAO,GAAG,oBAAC,WAAD;AAAa,UAAA,IAAI,EAAE;AAC3BH,YAAAA,SAAS,EAAE,KAAKE,KAAL,CAAWF,SADK;AAE3BK,YAAAA,EAAE,EAAE,KAAKH,KAAL,CAAWG,EAFY;AAG3BC,YAAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWI;AAHI,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAV;AAID,OALI,MAMA,IAAI,KAAKJ,KAAL,CAAWI,UAAX,IAAyB,CAACN,SAAS,EAAvC,EAA4C;AAC/CG,QAAAA,OAAO,GAAG,oBAAC,WAAD;AAAa,UAAA,IAAI,EAAE;AAC3BH,YAAAA,SAAS,EAAE,KAAKE,KAAL,CAAWF,SADK;AAE3BK,YAAAA,EAAE,EAAE,KAAKH,KAAL,CAAWG,EAFY;AAG3BC,YAAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWI;AAHI,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAV;AAID,OALI,MAMA;AACHH,QAAAA,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAAV;AACD;;AAED,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIA,OADJ,CADF;AAKC;;;;EAnCsBT,KAAK,CAACa,S;;AAsCjC,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MAAGC,YAAH,QAAGA,YAAH;AAAA,SAAuB;AAC7CC,IAAAA,IAAI,EAAED,YAAY,CAACC,IAD0B;AAE7CN,IAAAA,OAAO,EAAEK,YAAY,CAACL,OAFuB;AAG7CE,IAAAA,UAAU,EAAEG,YAAY,CAACH,UAHoB;AAI7CD,IAAAA,EAAE,EAAEI,YAAY,CAACJ,EAJ4B;AAK7CL,IAAAA,SAAS,EAAES,YAAY,CAACT;AALqB,GAAvB;AAAA,CAAxB;;AAQA,IAAMW,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SACjCjB,kBAAkB,CAChB;AACEE,IAAAA,aAAa,EAAbA;AADF,GADgB,EAIhBe,QAJgB,CADe;AAAA,CAAnC;;AAQA,eAAehB,OAAO,CACpBY,eADoB,EAEpBG,kBAFoB,CAAP,CAGbV,YAHa,CAAf","sourcesContent":["import React from 'react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { getRoleCookie } from '../../reducers/employeeHome';\nimport EmpFacility from '../empFacility';\nimport EmpDriver from '../empDriver';\nimport { isManager } from '../../utils/auth';\n\n\nclass EmployeeHome extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props.getRoleCookie()\n    }\n\n  render() {\n    let empType;\n    if (this.props.truckID) {\n      empType = <EmpDriver info={{\n        isManager: this.props.isManager,\n        id: this.props.id,\n        truckID: this.props.truckID }} />\n    }\n    else if (this.props.facilityID && isManager()) {\n      empType = <EmpFacility info={{\n        isManager: this.props.isManager,\n        id: this.props.id,\n        facilityID: this.props.facilityID }} />\n    }\n    else if (this.props.facilityID && !isManager() ) {\n      empType = <EmpFacility info={{\n        isManager: this.props.isManager,\n        id: this.props.id,\n        facilityID: this.props.facilityID }} />\n    }\n    else {\n      empType = <h1>You are not assigned to a facility or truck.</h1>\n    }\n\n    return (\n      <div>\n        { empType }\n      </div>\n    )\n    }\n}\n\nconst mapStateToProps = ({ employeeHome }) => ({\n  role: employeeHome.role,\n  truckID: employeeHome.truckID,\n  facilityID: employeeHome.facilityID,\n  id: employeeHome.id,\n  isManager: employeeHome.isManager,\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      getRoleCookie,\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmployeeHome)\n"]},"metadata":{},"sourceType":"module"}