{"ast":null,"code":"import { List } from 'immutable';\nexport var SET_EMPLOYEE_INFO = 'manager/SET_EMPLOYEE_INFO';\nexport var GET_EMPLOYEES = 'manager/GET_EMPLOYEES';\nvar initialState = {\n  id: null,\n  isManager: null,\n  facilityID: null,\n  employees: List([]),\n  newEmp: {}\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_EMPLOYEE_INFO:\n      return {\n        id: action.payload.id,\n        isManager: action.payload.isManager,\n        facilityID: action.payload.facilityID\n      };\n\n    default:\n      return state;\n  }\n});\nexport var setEmployeeInfo = function setEmployeeInfo(info) {\n  return function (dispatch) {\n    dispatch({\n      type: SET_EMPLOYEE_INFO,\n      payload: info\n    });\n  };\n};","map":{"version":3,"sources":["/home/cash/Documents/PostOffice/Frontend-React/src/reducers/manager.js"],"names":["List","SET_EMPLOYEE_INFO","GET_EMPLOYEES","initialState","id","isManager","facilityID","employees","newEmp","state","action","type","payload","setEmployeeInfo","info","dispatch"],"mappings":"AAAA,SAASA,IAAT,QAAqB,WAArB;AAEA,OAAO,IAAMC,iBAAiB,GAAG,2BAA1B;AACP,OAAO,IAAMC,aAAa,GAAG,uBAAtB;AAEP,IAAMC,YAAY,GAAG;AACnBC,EAAAA,EAAE,EAAE,IADe;AAEnBC,EAAAA,SAAS,EAAE,IAFQ;AAGnBC,EAAAA,UAAU,EAAE,IAHO;AAInBC,EAAAA,SAAS,EAAEP,IAAI,CAAC,EAAD,CAJI;AAKnBQ,EAAAA,MAAM,EAAE;AALW,CAArB;AAQA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,iBAAL;AACE,aAAO;AACLG,QAAAA,EAAE,EAAEM,MAAM,CAACE,OAAP,CAAeR,EADd;AAELC,QAAAA,SAAS,EAAEK,MAAM,CAACE,OAAP,CAAeP,SAFrB;AAGLC,QAAAA,UAAU,EAAEI,MAAM,CAACE,OAAP,CAAeN;AAHtB,OAAP;;AAKF;AACE,aAAOG,KAAP;AARJ;AAUD,CAXD;AAaA,OAAO,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD,EAAU;AACvC,SAAO,UAAAC,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAEV,iBAAR;AAA2BW,MAAAA,OAAO,EAAEE;AAApC,KAAD,CAAR;AACD,GAFD;AAGD,CAJM","sourcesContent":["import { List } from 'immutable'\n\nexport const SET_EMPLOYEE_INFO = 'manager/SET_EMPLOYEE_INFO';\nexport const GET_EMPLOYEES = 'manager/GET_EMPLOYEES';\n\nconst initialState = {\n  id: null,\n  isManager: null,\n  facilityID: null,\n  employees: List([]),\n  newEmp: {}\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_EMPLOYEE_INFO:\n      return {\n        id: action.payload.id,\n        isManager: action.payload.isManager,\n        facilityID: action.payload.facilityID,\n      };\n    default:\n      return state\n  }\n}\n\nexport const setEmployeeInfo = (info) => {\n  return dispatch => {\n    dispatch({ type: SET_EMPLOYEE_INFO, payload: info })\n  }\n};\n\n"]},"metadata":{},"sourceType":"module"}