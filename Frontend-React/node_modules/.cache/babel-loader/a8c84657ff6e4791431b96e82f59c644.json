{"ast":null,"code":"import _objectSpread from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/cash/Documents/PostOffice/Frontend-React/src/containers/editEmployee/index.js\";\nimport React from 'react';\nimport { isManager } from '../../utils/auth';\nimport Cookie from 'js-cookie';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Table from 'react-bootstrap/Table';\nimport { List } from 'immutable';\nimport { apiPost } from '../../utils/api';\nimport Alert from 'react-bootstrap/Alert';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nvar EditEmployee =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditEmployee, _React$Component);\n\n  function EditEmployee(props) {\n    var _this;\n\n    _classCallCheck(this, EditEmployee);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditEmployee).call(this, props));\n\n    _this.getEmployee = function () {\n      apiPost('/employee/info', {\n        ID: _this.state.id\n      }).then(function (resp) {\n        _this.setState({\n          newEmp: resp\n        });\n      }).catch(function (error) {\n        _this.setState({\n          notification: {\n            is: true,\n            message: 'Could not edit employee.',\n            type: 'danger',\n            header: 'Error!'\n          }\n        });\n      });\n    };\n\n    _this.handleNewEmpChange = function (event) {\n      var newEmpObj = _this.state.newEmp;\n      newEmpObj[event.target.name] = event.target.value;\n\n      _this.setState({\n        newEmp: newEmpObj\n      });\n    };\n\n    _this.handleUpdateSubmit = function () {\n      var emp = _this.state.newEmp;\n\n      if (emp.phoneNum && emp.email && emp.firstName && emp.lastName && emp.position && emp.salary && emp.zip && emp.address && emp.state && emp.city) {\n        apiPost('/employee/update', _objectSpread({\n          ID: _this.state.id\n        }, _this.state.newEmp)).then(function (resp) {\n          console.log(resp);\n\n          if (resp.success === true) {\n            _this.setState({\n              newEmp: {\n                firstName: '',\n                lastName: '',\n                workEmail: '',\n                password: '',\n                position: '',\n                salary: '',\n                workPhoneNum: '',\n                zip: '',\n                state: '',\n                address: '',\n                city: '',\n                role: 'Choose...'\n              },\n              notification: {\n                is: true,\n                message: 'Changed employee information.',\n                type: 'success',\n                header: 'Success!'\n              }\n            });\n          } else {\n            _this.setState({\n              notification: {\n                is: true,\n                message: 'Could not add employee. Invalid input or employee already exist.',\n                type: 'danger',\n                header: 'Error!'\n              }\n            });\n          }\n        }).catch(function (error) {\n          _this.setState({\n            notification: {\n              is: true,\n              message: 'Could not add employee. Invalid input or employee already exist.',\n              type: 'danger',\n              header: 'Error!'\n            }\n          });\n        });\n      }\n    };\n\n    _this.state = {\n      id: props.location.hash ? props.location.hash.substr(1) : undefined,\n      newEmp: {\n        firstName: '',\n        lastName: '',\n        workEmail: '',\n        position: '',\n        salary: '',\n        workPhoneNum: '',\n        zip: '',\n        state: '',\n        address: '',\n        city: ''\n      },\n      notification: {\n        is: false,\n        message: '',\n        type: '',\n        header: ''\n      }\n    };\n    _this.getEmployee = _this.getEmployee.bind(_assertThisInitialized(_this));\n    _this.handleNewEmpChange = _this.handleNewEmpChange.bind(_assertThisInitialized(_this));\n    _this.handleUpdateSubmit = _this.handleUpdateSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(EditEmployee, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getEmployee();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: formStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridFirstName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \" First Name \"), React.createElement(Form.Control, {\n        placeholder: \"John\",\n        name: \"firstName\",\n        value: this.state.newEmp.firstName,\n        onChange: this.handleNewEmpChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridLastName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \" Last Name \"), React.createElement(Form.Control, {\n        placeholder: \"Smith\",\n        name: \"lastName\",\n        value: this.state.newEmp.lastName,\n        onChange: this.handleNewEmpChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \" Work Email \"), React.createElement(Form.Control, {\n        placeholder: \"example@website.com\",\n        name: \"email\",\n        value: this.state.newEmp.workEmail,\n        onChange: this.handleNewEmpChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridPosition\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \" Position \"), React.createElement(Form.Control, {\n        placeholder: \"Clerk\",\n        name: \"position\",\n        value: this.state.newEmp.position,\n        onChange: this.handleNewEmpChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridSalary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \" Salary \"), React.createElement(Form.Control, {\n        placeholder: \"60000\",\n        name: \"salary\",\n        value: this.state.newEmp.salary,\n        onChange: this.handleNewEmpChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridPhone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \" Work Phone \"), React.createElement(Form.Control, {\n        placeholder: \"832-123-123\",\n        name: \"phoneNum\",\n        value: this.state.newEmp.workPhoneNum,\n        onChange: this.handleNewEmpChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridAddress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \" Address \"), React.createElement(Form.Control, {\n        placeholder: \"123 Main St.\",\n        name: \"address\",\n        value: this.state.newEmp.address,\n        onChange: this.handleNewEmpChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridCity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \" City \"), React.createElement(Form.Control, {\n        placeholder: \"Houston\",\n        name: \"city\",\n        value: this.state.newEmp.city,\n        onChange: this.handleNewEmpChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridZip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \" Zip \"), React.createElement(Form.Control, {\n        placeholder: \"77023\",\n        name: \"zip\",\n        value: this.state.newEmp.zip,\n        onChange: this.handleNewEmpChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridState\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \" State \"), React.createElement(Form.Control, {\n        name: \"state\",\n        value: this.state.newEmp.state,\n        onChange: this.handleNewEmpChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        variant: \"success\",\n        onClick: this.handleUpdateSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \" Submit \"));\n    }\n  }]);\n\n  return EditEmployee;\n}(React.Component);\n\nvar formStyle = {\n  margin: '0 auto',\n  marginTop: '3%',\n  textAlign: 'center',\n  width: '60%'\n};\nexport default EditEmployee;","map":{"version":3,"sources":["/home/cash/Documents/PostOffice/Frontend-React/src/containers/editEmployee/index.js"],"names":["React","isManager","Cookie","Button","Modal","Form","Col","Card","Table","List","apiPost","Alert","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","EditEmployee","props","getEmployee","ID","state","id","then","resp","setState","newEmp","catch","error","notification","is","message","type","header","handleNewEmpChange","event","newEmpObj","target","name","value","handleUpdateSubmit","emp","phoneNum","email","firstName","lastName","position","salary","zip","address","city","console","log","success","workEmail","password","workPhoneNum","role","location","hash","substr","undefined","bind","formStyle","Component","margin","marginTop","textAlign","width"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { isManager } from '../../utils/auth'\nimport Cookie from 'js-cookie'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport Table from 'react-bootstrap/Table'\nimport { List } from 'immutable'\nimport { apiPost } from '../../utils/api'\nimport Alert from 'react-bootstrap/Alert';\nimport {\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\n\nclass EditEmployee extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: props.location.hash ? props.location.hash.substr(1) : undefined,\n      newEmp: {\n        firstName: '',\n        lastName: '',\n        workEmail: '',\n        position: '',\n        salary: '',\n        workPhoneNum: '',\n        zip: '',\n        state: '',\n        address: '',\n        city: '',\n      },\n      notification: { is: false, message: '', type: '', header: '' }\n};\n    this.getEmployee = this.getEmployee.bind(this);\n    this.handleNewEmpChange = this.handleNewEmpChange.bind(this);\n    this.handleUpdateSubmit = this.handleUpdateSubmit.bind(this);\n    }\n\n  getEmployee = () => {\n    apiPost('/employee/info', { ID: this.state.id })\n        .then((resp) => {\n          this.setState({ newEmp: resp })\n        })\n        .catch((error) => {\n          this.setState({ notification: { is: true, message: 'Could not edit employee.', type: 'danger', header: 'Error!' } })\n        })\n  };\n\n  handleNewEmpChange = (event) => {\n    let newEmpObj = this.state.newEmp;\n    newEmpObj[event.target.name] = event.target.value;\n    this.setState({ newEmp: newEmpObj })\n  };\n\n  componentDidMount() {\n      this.getEmployee();\n    };\n\n    handleUpdateSubmit = () => {\n    const emp = this.state.newEmp;\n    if (emp.phoneNum && emp.email && emp.firstName && emp.lastName && emp.position && emp.salary && emp.zip && emp.address && emp.state && emp.city) {\n      apiPost('/employee/update', {\n        ID: this.state.id,\n        ...this.state.newEmp\n      })\n        .then((resp) => {\n          console.log(resp);\n          if (resp.success === true) {\n            this.setState({ newEmp: {\n        firstName: '',\n        lastName: '',\n        workEmail: '',\n        password: '',\n        position: '',\n        salary: '',\n        workPhoneNum: '',\n        zip: '',\n        state: '',\n        address: '',\n        city: '',\n        role: 'Choose...',\n      }, notification: { is: true, message: 'Changed employee information.', type: 'success', header: 'Success!' } })\n          } else {\n            this.setState({ notification: { is: true, message: 'Could not add employee. Invalid input or employee already exist.', type: 'danger', header: 'Error!' } })\n          }\n        })\n        .catch(error => {\n          this.setState({ notification: { is: true, message: 'Could not add employee. Invalid input or employee already exist.', type: 'danger', header: 'Error!' } })\n        })\n    }\n  };\n\n  render() {\n    return (\n      <div style={formStyle}>\n        <Form.Row>\n            <Form.Group as={Col} controlId='formGridFirstName'>\n              <Form.Label> First Name </Form.Label>\n              <Form.Control placeholder='John' name='firstName' value={this.state.newEmp.firstName} onChange={this.handleNewEmpChange} />\n            </Form.Group>\n            <Form.Group as={Col} controlId='formGridLastName'>\n              <Form.Label> Last Name </Form.Label>\n              <Form.Control placeholder='Smith' name='lastName' value={this.state.newEmp.lastName} onChange={this.handleNewEmpChange}  />\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col} controlId='formGridEmail'>\n              <Form.Label> Work Email </Form.Label>\n              <Form.Control placeholder='example@website.com' name='email' value={this.state.newEmp.workEmail} onChange={this.handleNewEmpChange} />\n            </Form.Group>\n            <Form.Group as={Col} controlId='formGridPosition'>\n              <Form.Label> Position </Form.Label>\n              <Form.Control placeholder='Clerk' name='position' value={this.state.newEmp.position} onChange={this.handleNewEmpChange} />\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col} controlId='formGridSalary'>\n              <Form.Label> Salary </Form.Label>\n              <Form.Control placeholder='60000' name='salary' value={this.state.newEmp.salary} onChange={this.handleNewEmpChange}  />\n            </Form.Group>\n            <Form.Group as={Col} controlId='formGridPhone'>\n              <Form.Label> Work Phone </Form.Label>\n              <Form.Control placeholder='832-123-123' name='phoneNum' value={this.state.newEmp.workPhoneNum} onChange={this.handleNewEmpChange}  />\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col} controlId='formGridAddress'>\n              <Form.Label> Address </Form.Label>\n              <Form.Control placeholder='123 Main St.' name='address' value={this.state.newEmp.address} onChange={this.handleNewEmpChange}  />\n            </Form.Group>\n            <Form.Group as={Col} controlId='formGridCity'>\n              <Form.Label> City </Form.Label>\n              <Form.Control placeholder='Houston' name='city' value={this.state.newEmp.city} onChange={this.handleNewEmpChange}  />\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col} controlId='formGridZip'>\n              <Form.Label> Zip </Form.Label>\n              <Form.Control placeholder='77023' name='zip' value={this.state.newEmp.zip} onChange={this.handleNewEmpChange}  />\n            </Form.Group>\n            <Form.Group as={Col} controlId='formGridState'>\n              <Form.Label> State </Form.Label>\n              <Form.Control name='state' value={this.state.newEmp.state} onChange={this.handleNewEmpChange}  />\n            </Form.Group>\n          </Form.Row>\n        <Button variant='success' onClick={this.handleUpdateSubmit}> Submit </Button>\n      </div>\n    )\n    }\n}\n\nconst formStyle = {\n  margin: '0 auto',\n  marginTop: '3%',\n  textAlign: 'center',\n  width: '60%'\n};\n\nexport default EditEmployee;"]},"metadata":{},"sourceType":"module"}