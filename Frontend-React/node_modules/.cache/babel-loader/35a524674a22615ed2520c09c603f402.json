{"ast":null,"code":"// import { List } from 'immutable'\n// import { apiPost } from '../utils/api';\n//\n// export const SET_EMPLOYEE_INFO = 'manager/SET_EMPLOYEE_INFO';\n// export const GET_EMPLOYEES = 'manager/GET_EMPLOYEES';\n// export const ERROR = 'manager/ERROR';\n// export const SHOW_NEW_EMP = 'manager/SHOW_NEW_EMP';\n// export const UPDATE_NEW_EMP_FIRST_NAME = 'manager/UPDATE_NEW_EMP';\n// export const UPDATE_NEW_EMP_LAST_NAME = 'manager/UPDATE_NEW_EMP_LAST_NAME';\n// export const UPDATE_NEW_EMP_WORK_EMAIL = 'manager/UPDATE_NEW_EMP_WORK_EMAIL';\n// export const UPDATE_NEW_EMP_PASSWORD = 'manager/UPDATE_NEW_EMP_PASSWORD';\n// export const UPDATE_NEW_EMP_POSITION = 'manager/UPDATE_NEW_EMP_POSITION';\n// export const UPDATE_NEW_EMP_SALARY= 'manager/UPDATE_NEW_EMP_SALARY';\n// export const UPDATE_NEW_EMP_WORK_PHONE= 'manager/UPDATE_NEW_EMP_WORK_PHONE';\n//\n// const initialState = {\n//   id: null,\n//   isManager: null,\n//   facilityID: null,\n//   employees: List([]),\n//   newEmp: {\n//     firstName: '',\n//     lastName: '',\n//     workEmail: '',\n//     password: '',\n//     position: '',\n//     salary: 0,\n//     workPhone: '',\n//   },\n//   showNewEmp: false,\n//   error: { is: false, message: '' }\n// };\n//\n// export default (state = initialState, action) => {\n//   switch (action.type) {\n//     case SET_EMPLOYEE_INFO:\n//       return {\n//         ...state,\n//         id: action.payload.id,\n//         isManager: action.payload.isManager,\n//         facilityID: action.payload.facilityID,\n//       };\n//     case ERROR:\n//       return {\n//         ...state,\n//         error: { is: true, message: action.payload.message }\n//       };\n//     case GET_EMPLOYEES:\n//       return {\n//         ...state,\n//         employees: List(action.payload.employees)\n//       };\n//     case UPDATE_NEW_EMP_FIRST_NAME:\n//       return {\n//         ...state,\n//         newEmp: action.payload.newEmp\n//       };\n//     case SHOW_NEW_EMP:\n//       return {\n//         ...state,\n//         showNewEmp: action.payload.status\n//       };\n//     default:\n//       return state\n//   }\n// }\n//\n// export const setEmployeeInfo = (info) => {\n//   return dispatch => {\n//     dispatch({ type: SET_EMPLOYEE_INFO, payload: info })\n//   }\n// };\n//\n// export const getEmployees = (payload) => {\n//   return dispatch => {\n//     apiPost('/facility/employees', payload)\n//       .then((resp) => {\n//         console.log(resp)\n//         if (resp.message) {\n//           updateError(resp.message)\n//         }\n//         dispatch({ type: GET_EMPLOYEES, payload: { employees: resp.employees } })\n//       })\n//       .catch((error) => {\n//         updateError(error.message)\n//       })\n//   }\n// };\n//\n// export const updateError = (message) => {\n//   return dispatch => {\n//     dispatch({ type: ERROR, payload: { message: message } })\n//   }\n// };\n//\n// export const updateEmpFirstName = (value) => {\n//   return dispatch => {\n//     dispatch({ type: UPDATE_NEW_EMP, payload: { newEmp: emp  } })\n//   }\n// };\n//\n// export const changeNewEmpView= (status) => {\n//   return dispatch => {\n//     dispatch({ type: SHOW_NEW_EMP, payload: { status: !status } })\n//   }\n// };\n//","map":{"version":3,"sources":["/home/cash/Documents/PostOffice/Frontend-React/src/reducers/manager.js"],"names":[],"mappingssourcesContent":["// import { List } from 'immutable'\n// import { apiPost } from '../utils/api';\n//\n// export const SET_EMPLOYEE_INFO = 'manager/SET_EMPLOYEE_INFO';\n// export const GET_EMPLOYEES = 'manager/GET_EMPLOYEES';\n// export const ERROR = 'manager/ERROR';\n// export const SHOW_NEW_EMP = 'manager/SHOW_NEW_EMP';\n// export const UPDATE_NEW_EMP_FIRST_NAME = 'manager/UPDATE_NEW_EMP';\n// export const UPDATE_NEW_EMP_LAST_NAME = 'manager/UPDATE_NEW_EMP_LAST_NAME';\n// export const UPDATE_NEW_EMP_WORK_EMAIL = 'manager/UPDATE_NEW_EMP_WORK_EMAIL';\n// export const UPDATE_NEW_EMP_PASSWORD = 'manager/UPDATE_NEW_EMP_PASSWORD';\n// export const UPDATE_NEW_EMP_POSITION = 'manager/UPDATE_NEW_EMP_POSITION';\n// export const UPDATE_NEW_EMP_SALARY= 'manager/UPDATE_NEW_EMP_SALARY';\n// export const UPDATE_NEW_EMP_WORK_PHONE= 'manager/UPDATE_NEW_EMP_WORK_PHONE';\n//\n// const initialState = {\n//   id: null,\n//   isManager: null,\n//   facilityID: null,\n//   employees: List([]),\n//   newEmp: {\n//     firstName: '',\n//     lastName: '',\n//     workEmail: '',\n//     password: '',\n//     position: '',\n//     salary: 0,\n//     workPhone: '',\n//   },\n//   showNewEmp: false,\n//   error: { is: false, message: '' }\n// };\n//\n// export default (state = initialState, action) => {\n//   switch (action.type) {\n//     case SET_EMPLOYEE_INFO:\n//       return {\n//         ...state,\n//         id: action.payload.id,\n//         isManager: action.payload.isManager,\n//         facilityID: action.payload.facilityID,\n//       };\n//     case ERROR:\n//       return {\n//         ...state,\n//         error: { is: true, message: action.payload.message }\n//       };\n//     case GET_EMPLOYEES:\n//       return {\n//         ...state,\n//         employees: List(action.payload.employees)\n//       };\n//     case UPDATE_NEW_EMP_FIRST_NAME:\n//       return {\n//         ...state,\n//         newEmp: action.payload.newEmp\n//       };\n//     case SHOW_NEW_EMP:\n//       return {\n//         ...state,\n//         showNewEmp: action.payload.status\n//       };\n//     default:\n//       return state\n//   }\n// }\n//\n// export const setEmployeeInfo = (info) => {\n//   return dispatch => {\n//     dispatch({ type: SET_EMPLOYEE_INFO, payload: info })\n//   }\n// };\n//\n// export const getEmployees = (payload) => {\n//   return dispatch => {\n//     apiPost('/facility/employees', payload)\n//       .then((resp) => {\n//         console.log(resp)\n//         if (resp.message) {\n//           updateError(resp.message)\n//         }\n//         dispatch({ type: GET_EMPLOYEES, payload: { employees: resp.employees } })\n//       })\n//       .catch((error) => {\n//         updateError(error.message)\n//       })\n//   }\n// };\n//\n// export const updateError = (message) => {\n//   return dispatch => {\n//     dispatch({ type: ERROR, payload: { message: message } })\n//   }\n// };\n//\n// export const updateEmpFirstName = (value) => {\n//   return dispatch => {\n//     dispatch({ type: UPDATE_NEW_EMP, payload: { newEmp: emp  } })\n//   }\n// };\n//\n// export const changeNewEmpView= (status) => {\n//   return dispatch => {\n//     dispatch({ type: SHOW_NEW_EMP, payload: { status: !status } })\n//   }\n// };\n//\n"]},"metadata":{},"sourceType":"module"}