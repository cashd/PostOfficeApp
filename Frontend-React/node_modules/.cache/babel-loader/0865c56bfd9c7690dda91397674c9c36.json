{"ast":null,"code":"// import { apiPost } from '../utils/api'\n// import { List } from 'immutable'\n//\n// export const PACKAGES_REQUEST = 'customer/PACKAGES_REQUEST';\n// export const PACKAGES_SUCCESS = 'customer/PACKAGES_SUCCESS';\n// export const CHANGE_NEW_PACKAGE_VIEW = 'customer/CHANGE_NEW_PACKAGE_VIEW';\n// export const NEW_PACKAGE_SUCCESS = 'customer/NEW_PACKAGE_SUCCESS';\n// export const ERROR = 'customer/ERROR';\n// export const UPDATE_NEW_PACKAGE_EMAIL = 'customer/UPDATE_NEW_PACKAGE_EMAIL';\n// export const UPDATE_NEW_PACKAGE_ADDRESS = 'customer/UPDATE_NEW_PACKAGE_ADDRESS';\n// export const UPDATE_NEW_PACKAGE_WEIGHT = 'customer/UPDATE_NEW_PACKAGE_WEIGHT';\n// export const GET_INCOMING_PACKAGES = 'customer/GET_INCOMING_PACKAGES';\n//\n// const initialState = {\n//   packages: List([]),\n//   inPackages: List([]),\n//   newPackageViewStatus: false,\n//   error: { is: false, msg: '' },\n//   newPackEmail: '',\n//   newPackAddress: '',\n//   newPackWeight: 0,\n// };\n//\n// export default (state = initialState, action) => {\n//   switch (action.type) {\n//     case PACKAGES_SUCCESS:\n//       return {\n//         ...state,\n//         packages: action.payload.packages\n//       };\n//     case CHANGE_NEW_PACKAGE_VIEW:\n//       return {\n//         ...state,\n//         newPackageViewStatus: action.payload.status\n//       };\n//     case ERROR:\n//       return {\n//         ...state,\n//         error: action.payload.error\n//       };\n//     case UPDATE_NEW_PACKAGE_ADDRESS:\n//       return {\n//         ...state,\n//         newPackAddress: action.payload.address\n//       };\n//     case UPDATE_NEW_PACKAGE_EMAIL:\n//       return {\n//         ...state,\n//         newPackEmail: action.payload.email\n//       };\n//     case UPDATE_NEW_PACKAGE_WEIGHT:\n//       return {\n//         ...state,\n//         newPackWeight: action.payload.weight\n//       };\n//     case GET_INCOMING_PACKAGES:\n//       return {\n//         ...state,\n//         inPackages: action.payload.packages\n//       };\n//     default:\n//       return state\n//   }\n// }\n//\n// export const getPackages = (id) => {\n//   return dispatch =>{\n//     dispatch({ type: PACKAGES_REQUEST })\n//     apiPost('/customer/packages', { id: id })\n//       .then((respJSON) => {\n//         dispatch({ type: PACKAGES_SUCCESS, payload: { packages: List(respJSON.packages) } })\n//       })\n//   }\n// };\n//\n// export const changeNewPackageView = (status) => {\n//   return dispatch => {\n//     dispatch({ type: CHANGE_NEW_PACKAGE_VIEW, payload: { status: !status } })\n//   }\n// };\n//\n// export const newPackage = (info) => {\n//   console.log(info);\n//   return dispatch => {\n//     apiPost('/customer/newPackage', info)\n//       .then((respJSON) => {\n//         if (respJSON.success) {\n//           console.log(respJSON)\n//           dispatch({ type: NEW_PACKAGE_SUCCESS })\n//           window.location.reload()\n//         } else {\n//           changeNewPackageView(true)\n//           throw new Error('Could not make new package')\n//         }\n//       })\n//       .catch((error) => {\n//         dispatch({ type: ERROR, payload: { error: { is: true, msg: error.message } } })\n//       })\n//   }\n// };\n//\n// export const updateNewPackageEmail = (email) => {\n//   return dispatch => {\n//     dispatch({ type: UPDATE_NEW_PACKAGE_EMAIL, payload: { email: email } })\n//   }\n// };\n//\n// export const updateNewPackageAddress = (address) => {\n//   return dispatch => {\n//     dispatch({ type: UPDATE_NEW_PACKAGE_ADDRESS, payload: { address: address } })\n//   }\n// };\n//\n// export const updateNewPackageWeight= (weight) => {\n//   return dispatch => {\n//     dispatch({ type: UPDATE_NEW_PACKAGE_WEIGHT, payload: { weight: weight } })\n//   }\n// };\n//\n// export const getIncomingPackages = (id) => {\n//   return dispatch => {\n//     apiPost('/customer/incomingpackages', { id: id })\n//       .then((resp) => {\n//         dispatch({ type: GET_INCOMING_PACKAGES, payload: { packages: List(resp.packages) } })\n//       })\n//       .catch((error) => {\n//         dispatch({ type: ERROR, payload: { error: { is: true, msg: error.message } } })\n//       })\n//   }\n// };","map":{"version":3,"sources":["/home/cash/Documents/PostOffice/Frontend-React/src/reducers/customer.js"],"names":[],"mappingssourcesContent":["// import { apiPost } from '../utils/api'\n// import { List } from 'immutable'\n//\n// export const PACKAGES_REQUEST = 'customer/PACKAGES_REQUEST';\n// export const PACKAGES_SUCCESS = 'customer/PACKAGES_SUCCESS';\n// export const CHANGE_NEW_PACKAGE_VIEW = 'customer/CHANGE_NEW_PACKAGE_VIEW';\n// export const NEW_PACKAGE_SUCCESS = 'customer/NEW_PACKAGE_SUCCESS';\n// export const ERROR = 'customer/ERROR';\n// export const UPDATE_NEW_PACKAGE_EMAIL = 'customer/UPDATE_NEW_PACKAGE_EMAIL';\n// export const UPDATE_NEW_PACKAGE_ADDRESS = 'customer/UPDATE_NEW_PACKAGE_ADDRESS';\n// export const UPDATE_NEW_PACKAGE_WEIGHT = 'customer/UPDATE_NEW_PACKAGE_WEIGHT';\n// export const GET_INCOMING_PACKAGES = 'customer/GET_INCOMING_PACKAGES';\n//\n// const initialState = {\n//   packages: List([]),\n//   inPackages: List([]),\n//   newPackageViewStatus: false,\n//   error: { is: false, msg: '' },\n//   newPackEmail: '',\n//   newPackAddress: '',\n//   newPackWeight: 0,\n// };\n//\n// export default (state = initialState, action) => {\n//   switch (action.type) {\n//     case PACKAGES_SUCCESS:\n//       return {\n//         ...state,\n//         packages: action.payload.packages\n//       };\n//     case CHANGE_NEW_PACKAGE_VIEW:\n//       return {\n//         ...state,\n//         newPackageViewStatus: action.payload.status\n//       };\n//     case ERROR:\n//       return {\n//         ...state,\n//         error: action.payload.error\n//       };\n//     case UPDATE_NEW_PACKAGE_ADDRESS:\n//       return {\n//         ...state,\n//         newPackAddress: action.payload.address\n//       };\n//     case UPDATE_NEW_PACKAGE_EMAIL:\n//       return {\n//         ...state,\n//         newPackEmail: action.payload.email\n//       };\n//     case UPDATE_NEW_PACKAGE_WEIGHT:\n//       return {\n//         ...state,\n//         newPackWeight: action.payload.weight\n//       };\n//     case GET_INCOMING_PACKAGES:\n//       return {\n//         ...state,\n//         inPackages: action.payload.packages\n//       };\n//     default:\n//       return state\n//   }\n// }\n//\n// export const getPackages = (id) => {\n//   return dispatch =>{\n//     dispatch({ type: PACKAGES_REQUEST })\n//     apiPost('/customer/packages', { id: id })\n//       .then((respJSON) => {\n//         dispatch({ type: PACKAGES_SUCCESS, payload: { packages: List(respJSON.packages) } })\n//       })\n//   }\n// };\n//\n// export const changeNewPackageView = (status) => {\n//   return dispatch => {\n//     dispatch({ type: CHANGE_NEW_PACKAGE_VIEW, payload: { status: !status } })\n//   }\n// };\n//\n// export const newPackage = (info) => {\n//   console.log(info);\n//   return dispatch => {\n//     apiPost('/customer/newPackage', info)\n//       .then((respJSON) => {\n//         if (respJSON.success) {\n//           console.log(respJSON)\n//           dispatch({ type: NEW_PACKAGE_SUCCESS })\n//           window.location.reload()\n//         } else {\n//           changeNewPackageView(true)\n//           throw new Error('Could not make new package')\n//         }\n//       })\n//       .catch((error) => {\n//         dispatch({ type: ERROR, payload: { error: { is: true, msg: error.message } } })\n//       })\n//   }\n// };\n//\n// export const updateNewPackageEmail = (email) => {\n//   return dispatch => {\n//     dispatch({ type: UPDATE_NEW_PACKAGE_EMAIL, payload: { email: email } })\n//   }\n// };\n//\n// export const updateNewPackageAddress = (address) => {\n//   return dispatch => {\n//     dispatch({ type: UPDATE_NEW_PACKAGE_ADDRESS, payload: { address: address } })\n//   }\n// };\n//\n// export const updateNewPackageWeight= (weight) => {\n//   return dispatch => {\n//     dispatch({ type: UPDATE_NEW_PACKAGE_WEIGHT, payload: { weight: weight } })\n//   }\n// };\n//\n// export const getIncomingPackages = (id) => {\n//   return dispatch => {\n//     apiPost('/customer/incomingpackages', { id: id })\n//       .then((resp) => {\n//         dispatch({ type: GET_INCOMING_PACKAGES, payload: { packages: List(resp.packages) } })\n//       })\n//       .catch((error) => {\n//         dispatch({ type: ERROR, payload: { error: { is: true, msg: error.message } } })\n//       })\n//   }\n// };\n"]},"metadata":{},"sourceType":"module"}