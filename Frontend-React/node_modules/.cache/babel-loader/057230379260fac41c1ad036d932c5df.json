{"ast":null,"code":"import _classCallCheck from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/cash/Documents/PostOffice/Frontend-React/src/containers/login/index.js\";\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport { updatePasswordField, updateEmailField, checkLoginCredentials } from \"../../reducers/login\";\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { isAuth } from '../../utils/auth';\nimport { push } from 'connected-react-router';\n\nvar Login =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  function Login() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Login)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handlePasswordChange = function (event) {\n      console.log(event.target.value);\n\n      _this.props.updatePasswordField(event.target.value);\n    };\n\n    _this.handleEmailChange = function (event) {\n      console.log(event.target.value);\n\n      _this.props.updateEmailField(event.target.value);\n    };\n\n    _this.handleSubmitClick = function () {\n      console.log(_this.props.email);\n      console.log(_this.props.password);\n\n      _this.props.checkLoginCredentials(_this.props.email, _this.props.password);\n    };\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (isAuth()) {\n        this.props.pushHome();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: divStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, this.props.error.is ? React.createElement(Alert, {\n        variant: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \" \", React.createElement(Alert.Heading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Login Error!\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Your email or password is incorrect. Try again.\")) : null, React.createElement(Form, {\n        style: formStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"formBasicEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Email address\"), React.createElement(Form.Control, {\n        size: \"lg\",\n        type: \"email\",\n        placeholder: \"Enter email\",\n        value: this.props.email,\n        onChange: this.handleEmailChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formBasicPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Form.Control, {\n        size: \"lg\",\n        type: \"password\",\n        placeholder: \"Password\",\n        value: this.props.password,\n        onChange: this.handlePasswordChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })), React.createElement(Button, {\n        variant: \"primary\",\n        size: \"large\",\n        onClick: this.handleSubmitClick.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return Login;\n}(React.Component); // Styles\n\n\nvar divStyle = {\n  textAlign: \"center\"\n};\nvar formStyle = {\n  display: 'inline-block',\n  margin: '0 auto',\n  marginTop: '3%',\n  width: '20%'\n};\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var login = _ref.login;\n  return {\n    email: login.email,\n    password: login.password,\n    error: login.error\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    updatePasswordField: updatePasswordField,\n    updateEmailField: updateEmailField,\n    checkLoginCredentials: checkLoginCredentials,\n    pushHome: function pushHome() {\n      return push('/');\n    }\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/cash/Documents/PostOffice/Frontend-React/src/containers/login/index.js"],"names":["React","Form","Button","Alert","updatePasswordField","updateEmailField","checkLoginCredentials","bindActionCreators","connect","isAuth","push","Login","handlePasswordChange","event","console","log","target","value","props","handleEmailChange","handleSubmitClick","email","password","pushHome","divStyle","error","is","formStyle","bind","Component","textAlign","display","margin","marginTop","width","mapStateToProps","login","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport { updatePasswordField, updateEmailField, checkLoginCredentials } from \"../../reducers/login\";\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { isAuth } from '../../utils/auth'\r\nimport { push } from 'connected-react-router'\r\n\r\nclass Login extends React.Component {\r\n\r\n    handlePasswordChange = (event) => {\r\n        console.log(event.target.value);\r\n        this.props.updatePasswordField(event.target.value)\r\n    };\r\n\r\n    handleEmailChange = (event) => {\r\n        console.log(event.target.value);\r\n        this.props.updateEmailField(event.target.value)\r\n    };\r\n\r\n    handleSubmitClick = () => {\r\n        console.log(this.props.email);\r\n        console.log(this.props.password);\r\n        this.props.checkLoginCredentials(this.props.email, this.props.password)\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (isAuth()) {\r\n            this.props.pushHome()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div style={divStyle}>\r\n\r\n            { this.props.error.is ? (<Alert variant=\"danger\" > <Alert.Heading>Login Error!</Alert.Heading><p>Your email or password is incorrect. Try again.</p></Alert>): null }\r\n            <Form style={formStyle}>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control size='lg' type=\"email\" placeholder=\"Enter email\" value={this.props.email} onChange={this.handleEmailChange.bind(this)} />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control size='lg' type=\"password\" placeholder=\"Password\"  value={this.props.password} onChange={this.handlePasswordChange.bind(this)} />\r\n              </Form.Group>\r\n              <Button variant=\"primary\" size=\"large\" onClick={ this.handleSubmitClick.bind(this) }>\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n      </div>\r\n    }\r\n}\r\n\r\n// Styles\r\nconst divStyle = {\r\n    textAlign: \"center\",\r\n};\r\nconst formStyle = {\r\n    display: 'inline-block',\r\n    margin: '0 auto',\r\n    marginTop: '3%',\r\n    width: '20%',\r\n};\r\n\r\nconst mapStateToProps = ({ login }) => ({\r\n    email: login.email,\r\n    password: login.password,\r\n    error: login.error,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators(\r\n      {\r\n          updatePasswordField,\r\n          updateEmailField,\r\n          checkLoginCredentials,\r\n          pushHome: () => push('/'),\r\n      },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Login)\r\n"]},"metadata":{},"sourceType":"module"}