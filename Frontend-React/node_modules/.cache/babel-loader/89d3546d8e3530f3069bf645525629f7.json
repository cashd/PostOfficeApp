{"ast":null,"code":"import _objectSpread from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { List } from 'immutable';\nimport { apiPost } from '../utils/api';\nimport { CHANGE_NEW_PACKAGE_VIEW } from \"./customer\";\nexport var SET_EMPLOYEE_INFO = 'manager/SET_EMPLOYEE_INFO';\nexport var GET_EMPLOYEES = 'manager/GET_EMPLOYEES';\nexport var ERROR = 'manager/ERROR';\nexport var UPDATE_NEW_EMP = 'manager/UPDATE_NEW_EMP';\nexport var SHOW_NEW_EMP = 'manager/SHOW_NEW_EMP'; // export const UPDATE_NEW_EMP_LAST_NAME = 'manager/UPDATE_NEW_EMP_LAST_NAME';\n// export const UPDATE_NEW_EMP_WORK_EMAIL = 'manager/UPDATE_NEW_EMP_WORK_EMAIL';\n// export const UPDATE_NEW_EMP_PASSWORD = 'manager/UPDATE_NEW_EMP_PASSWORD';\n// export const UPDATE_NEW_EMP_POSITION = 'manager/UPDATE_NEW_EMP_POSITION';\n// export const UPDATE_NEW_EMP_SALARY= 'manager/UPDATE_NEW_EMP_SALARY';\n// export const UPDATE_NEW_EMP_WORK_PHONE= 'manager/UPDATE_NEW_EMP_WORK_PHONE';\n\nvar initialState = {\n  id: null,\n  isManager: null,\n  facilityID: null,\n  employees: List([]),\n  newEmp: {\n    firstName: '',\n    lastName: '',\n    workEmail: '',\n    password: '',\n    position: '',\n    salary: 0,\n    workPhone: ''\n  },\n  showNewEmp: false,\n  error: {\n    is: false,\n    message: ''\n  }\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_EMPLOYEE_INFO:\n      return _objectSpread({}, state, {\n        id: action.payload.id,\n        isManager: action.payload.isManager,\n        facilityID: action.payload.facilityID\n      });\n\n    case ERROR:\n      return _objectSpread({}, state, {\n        error: {\n          is: true,\n          message: action.payload.message\n        }\n      });\n\n    case GET_EMPLOYEES:\n      return _objectSpread({}, state, {\n        employees: List(action.payload.employees)\n      });\n\n    case UPDATE_NEW_EMP:\n      return _objectSpread({}, state, {\n        newEmp: action.payload.newEmp\n      });\n\n    case SHOW_NEW_EMP:\n      return _objectSpread({}, state, {\n        showNewEmp: action.payload.status\n      });\n\n    default:\n      return state;\n  }\n});\nexport var setEmployeeInfo = function setEmployeeInfo(info) {\n  return function (dispatch) {\n    dispatch({\n      type: SET_EMPLOYEE_INFO,\n      payload: info\n    });\n  };\n};\nexport var getEmployees = function getEmployees(payload) {\n  return function (dispatch) {\n    apiPost('/facility/employees', payload).then(function (resp) {\n      console.log(resp);\n\n      if (resp.message) {\n        updateError(resp.message);\n      }\n\n      dispatch({\n        type: GET_EMPLOYEES,\n        payload: {\n          employees: resp.employees\n        }\n      });\n    }).catch(function (error) {\n      updateError(error.message);\n    });\n  };\n};\nexport var updateError = function updateError(message) {\n  return function (dispatch) {\n    dispatch({\n      type: ERROR,\n      payload: {\n        message: message\n      }\n    });\n  };\n};\nexport var updateEmp = function updateEmp(emp) {\n  return function (dispatch) {\n    dispatch({\n      type: UPDATE_NEW_EMP,\n      payload: {\n        newEmp: emp\n      }\n    });\n  };\n};\nexport var changeNewEmpView = function changeNewEmpView(status) {\n  return function (dispatch) {\n    dispatch({\n      type: SHOW_NEW_EMP,\n      payload: {\n        status: !status\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/home/cash/Documents/PostOffice/Frontend-React/src/reducers/manager.js"],"names":["List","apiPost","CHANGE_NEW_PACKAGE_VIEW","SET_EMPLOYEE_INFO","GET_EMPLOYEES","ERROR","UPDATE_NEW_EMP","SHOW_NEW_EMP","initialState","id","isManager","facilityID","employees","newEmp","firstName","lastName","workEmail","password","position","salary","workPhone","showNewEmp","error","is","message","state","action","type","payload","status","setEmployeeInfo","info","dispatch","getEmployees","then","resp","console","log","updateError","catch","updateEmp","emp","changeNewEmpView"],"mappings":"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","sourcesContent":["import { List } from 'immutable'\nimport { apiPost } from '../utils/api';\nimport {CHANGE_NEW_PACKAGE_VIEW} from \"./customer\";\n\nexport const SET_EMPLOYEE_INFO = 'manager/SET_EMPLOYEE_INFO';\nexport const GET_EMPLOYEES = 'manager/GET_EMPLOYEES';\nexport const ERROR = 'manager/ERROR';\nexport const UPDATE_NEW_EMP = 'manager/UPDATE_NEW_EMP';\nexport const SHOW_NEW_EMP = 'manager/SHOW_NEW_EMP';\n// export const UPDATE_NEW_EMP_LAST_NAME = 'manager/UPDATE_NEW_EMP_LAST_NAME';\n// export const UPDATE_NEW_EMP_WORK_EMAIL = 'manager/UPDATE_NEW_EMP_WORK_EMAIL';\n// export const UPDATE_NEW_EMP_PASSWORD = 'manager/UPDATE_NEW_EMP_PASSWORD';\n// export const UPDATE_NEW_EMP_POSITION = 'manager/UPDATE_NEW_EMP_POSITION';\n// export const UPDATE_NEW_EMP_SALARY= 'manager/UPDATE_NEW_EMP_SALARY';\n// export const UPDATE_NEW_EMP_WORK_PHONE= 'manager/UPDATE_NEW_EMP_WORK_PHONE';\n\nconst initialState = {\n  id: null,\n  isManager: null,\n  facilityID: null,\n  employees: List([]),\n  newEmp: {\n    firstName: '',\n    lastName: '',\n    workEmail: '',\n    password: '',\n    position: '',\n    salary: 0,\n    workPhone: '',\n  },\n  showNewEmp: false,\n  error: { is: false, message: '' }\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_EMPLOYEE_INFO:\n      return {\n        ...state,\n        id: action.payload.id,\n        isManager: action.payload.isManager,\n        facilityID: action.payload.facilityID,\n      };\n    case ERROR:\n      return {\n        ...state,\n        error: { is: true, message: action.payload.message }\n      };\n    case GET_EMPLOYEES:\n      return {\n        ...state,\n        employees: List(action.payload.employees)\n      };\n    case UPDATE_NEW_EMP:\n      return {\n        ...state,\n        newEmp: action.payload.newEmp\n      };\n    case SHOW_NEW_EMP:\n      return {\n        ...state,\n        showNewEmp: action.payload.status\n      };\n    default:\n      return state\n  }\n}\n\nexport const setEmployeeInfo = (info) => {\n  return dispatch => {\n    dispatch({ type: SET_EMPLOYEE_INFO, payload: info })\n  }\n};\n\nexport const getEmployees = (payload) => {\n  return dispatch => {\n    apiPost('/facility/employees', payload)\n      .then((resp) => {\n        console.log(resp)\n        if (resp.message) {\n          updateError(resp.message)\n        }\n        dispatch({ type: GET_EMPLOYEES, payload: { employees: resp.employees } })\n      })\n      .catch((error) => {\n        updateError(error.message)\n      })\n  }\n};\n\nexport const updateError = (message) => {\n  return dispatch => {\n    dispatch({ type: ERROR, payload: { message: message } })\n  }\n};\n\nexport const updateEmp = (emp) => {\n  return dispatch => {\n    dispatch({ type: UPDATE_NEW_EMP, payload: { newEmp: emp  } })\n  }\n};\n\nexport const changeNewEmpView= (status) => {\n  return dispatch => {\n    dispatch({ type: SHOW_NEW_EMP, payload: { status: !status } })\n  }\n};\n\n"]},"metadata":{},"sourceType":"module"}