{"ast":null,"code":"import { push } from 'connected-react-router';\nimport Cookie from 'js-cookie';\nexport var GET_COOKIES = 'employeeHome/GET_COOKIES';\nexport var FAIL_COOKIE = 'employee/ERROR';\nvar initialState = {\n  id: null,\n  role: null,\n  isManager: false,\n  truckID: null,\n  facilityID: null\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_COOKIES:\n      return {\n        id: action.payload.id,\n        role: action.payload.role,\n        isManager: action.payload.isManager ? action.payload.isManager : false,\n        truckID: action.payload.truckID ? action.payload.truckID : null,\n        facilityID: action.payload.facilityID ? action.payload.facilityID : null\n      };\n\n    case FAIL_COOKIE:\n      return state;\n\n    default:\n      return state;\n  }\n});\nexport var getRoleCookie = function getRoleCookie() {\n  return function (dispatch) {\n    var roleCookie = Cookie.get('role');\n    var id = Cookie.get('id');\n\n    if (id && roleCookie) {\n      var cookies = {\n        isManager: Cookie.get('isManager'),\n        truckID: Cookie.get('truckID'),\n        facilityID: Cookie.get('facilityID'),\n        id: id,\n        role: role\n      };\n      dispatch({\n        type: GET_COOKIES,\n        payload: cookies\n      });\n    } else {\n      dispatch(push('/login'));\n    }\n  };\n};","map":{"version":3,"sources":["/home/cash/Documents/PostOffice/Frontend-React/src/reducers/employeeHome.js"],"names":["push","Cookie","GET_COOKIES","FAIL_COOKIE","initialState","id","role","isManager","truckID","facilityID","state","action","type","payload","getRoleCookie","dispatch","roleCookie","get","cookies"],"mappings":"AAAA,SAASA,IAAT,QAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAO,IAAMC,WAAW,GAAG,0BAApB;AACP,OAAO,IAAMC,WAAW,GAAG,gBAApB;AAEP,IAAMC,YAAY,GAAG;AACnBC,EAAAA,EAAE,EAAE,IADe;AAEnBC,EAAAA,IAAI,EAAE,IAFa;AAGnBC,EAAAA,SAAS,EAAE,KAHQ;AAInBC,EAAAA,OAAO,EAAE,IAJU;AAKnBC,EAAAA,UAAU,EAAE;AALO,CAArB;AAQA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,WAAL;AACE,aAAO;AACLG,QAAAA,EAAE,EAAEM,MAAM,CAACE,OAAP,CAAeR,EADd;AAELC,QAAAA,IAAI,EAAEK,MAAM,CAACE,OAAP,CAAeP,IAFhB;AAGLC,QAAAA,SAAS,EAAEI,MAAM,CAACE,OAAP,CAAeN,SAAf,GAA2BI,MAAM,CAACE,OAAP,CAAeN,SAA1C,GAAsD,KAH5D;AAILC,QAAAA,OAAO,EAAEG,MAAM,CAACE,OAAP,CAAeL,OAAf,GAAyBG,MAAM,CAACE,OAAP,CAAeL,OAAxC,GAAkD,IAJtD;AAKLC,QAAAA,UAAU,EAAEE,MAAM,CAACE,OAAP,CAAeJ,UAAf,GAA4BE,MAAM,CAACE,OAAP,CAAeJ,UAA3C,GAAwD;AAL/D,OAAP;;AAOF,SAAKN,WAAL;AACE,aAAOO,KAAP;;AACF;AACE,aAAOA,KAAP;AAZJ;AAcD,CAfD;AAiBA,OAAO,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC/B,SAAO,UAAAC,QAAQ,EAAI;AACf,QAAMC,UAAU,GAAGf,MAAM,CAACgB,GAAP,CAAW,MAAX,CAAnB;AACA,QAAMZ,EAAE,GAAGJ,MAAM,CAACgB,GAAP,CAAW,IAAX,CAAX;;AACA,QAAIZ,EAAE,IAAIW,UAAV,EAAsB;AACpB,UAAME,OAAO,GAAG;AACdX,QAAAA,SAAS,EAAEN,MAAM,CAACgB,GAAP,CAAW,WAAX,CADG;AAEdT,QAAAA,OAAO,EAAEP,MAAM,CAACgB,GAAP,CAAW,SAAX,CAFK;AAGdR,QAAAA,UAAU,EAAER,MAAM,CAACgB,GAAP,CAAW,YAAX,CAHE;AAIdZ,QAAAA,EAAE,EAAEA,EAJU;AAKdC,QAAAA,IAAI,EAAEA;AALQ,OAAhB;AAOAS,MAAAA,QAAQ,CAAC;AAAEH,QAAAA,IAAI,EAAEV,WAAR;AAAqBW,QAAAA,OAAO,EAAEK;AAA9B,OAAD,CAAR;AACD,KATD,MASO;AACLH,MAAAA,QAAQ,CAACf,IAAI,CAAC,QAAD,CAAL,CAAR;AACD;AACJ,GAfD;AAgBH,CAjBM","sourcesContent":["import { push } from 'connected-react-router'\nimport Cookie from 'js-cookie'\n\nexport const GET_COOKIES = 'employeeHome/GET_COOKIES';\nexport const FAIL_COOKIE = 'employee/ERROR';\n\nconst initialState = {\n  id: null,\n  role: null,\n  isManager: false,\n  truckID: null,\n  facilityID: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_COOKIES:\n      return {\n        id: action.payload.id,\n        role: action.payload.role,\n        isManager: action.payload.isManager ? action.payload.isManager : false,\n        truckID: action.payload.truckID ? action.payload.truckID : null,\n        facilityID: action.payload.facilityID ? action.payload.facilityID : null,\n      };\n    case FAIL_COOKIE:\n      return state;\n    default:\n      return state\n  }\n}\n\nexport const getRoleCookie = () => {\n    return dispatch => {\n        const roleCookie = Cookie.get('role');\n        const id = Cookie.get('id');\n        if (id && roleCookie) {\n          const cookies = {\n            isManager: Cookie.get('isManager'),\n            truckID: Cookie.get('truckID'),\n            facilityID: Cookie.get('facilityID'),\n            id: id,\n            role: role\n          };\n          dispatch({ type: GET_COOKIES, payload: cookies })\n        } else {\n          dispatch(push('/login'))\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"module"}