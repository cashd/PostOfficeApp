{"ast":null,"code":"import _objectSpread from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { List } from 'immutable';\nimport { apiPost } from '../utils/api';\nexport var SET_EMPLOYEE_INFO = 'manager/SET_EMPLOYEE_INFO';\nexport var GET_EMPLOYEES = 'manager/GET_EMPLOYEES';\nexport var ERROR = 'manager/ERROR';\nvar initialState = {\n  id: null,\n  isManager: null,\n  facilityID: null,\n  employees: List([]),\n  newEmp: {\n    firstName: '',\n    lastName: '',\n    workEmail: '',\n    password: '',\n    role: '',\n    salary: 0\n  },\n  error: {\n    is: false,\n    message: ''\n  }\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_EMPLOYEE_INFO:\n      return _objectSpread({}, state, {\n        id: action.payload.id,\n        isManager: action.payload.isManager,\n        facilityID: action.payload.facilityID\n      });\n\n    case ERROR:\n      return _objectSpread({}, state, {\n        error: {\n          is: true,\n          message: action.payload.message\n        }\n      });\n\n    case GET_EMPLOYEES:\n      return _objectSpread({}, state, {\n        employees: List(action.payload.employees)\n      });\n\n    default:\n      return state;\n  }\n});\nexport var setEmployeeInfo = function setEmployeeInfo(info) {\n  return function (dispatch) {\n    dispatch({\n      type: SET_EMPLOYEE_INFO,\n      payload: info\n    });\n  };\n};\nexport var getEmployees = function getEmployees(payload) {\n  return function (dispatch) {\n    apiPost('/facility/employees', payload).then(function (resp) {\n      console.log(resp);\n\n      if (resp.message) {\n        updateError(resp.message);\n      }\n\n      dispatch({\n        type: GET_EMPLOYEES,\n        payload: {\n          employees: resp.employees\n        }\n      });\n    }).catch(function (error) {\n      updateError(error.message);\n    });\n  };\n};\nexport var updateError = function updateError(message) {\n  return function (dispatch) {\n    dispatch({\n      type: ERROR,\n      payload: {\n        message: message\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/home/cash/Documents/PostOffice/Frontend-React/src/reducers/manager.js"],"names":["List","apiPost","SET_EMPLOYEE_INFO","GET_EMPLOYEES","ERROR","initialState","id","isManager","facilityID","employees","newEmp","firstName","lastName","workEmail","password","role","salary","error","is","message","state","action","type","payload","setEmployeeInfo","info","dispatch","getEmployees","then","resp","console","log","updateError","catch"],"mappings":"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","sourcesContent":["import { List } from 'immutable'\nimport { apiPost } from '../utils/api';\n\nexport const SET_EMPLOYEE_INFO = 'manager/SET_EMPLOYEE_INFO';\nexport const GET_EMPLOYEES = 'manager/GET_EMPLOYEES';\nexport const ERROR = 'manager/ERROR';\n\nconst initialState = {\n  id: null,\n  isManager: null,\n  facilityID: null,\n  employees: List([]),\n  newEmp: {\n    firstName: '',\n    lastName: '',\n    workEmail: '',\n    password: '',\n    role: '',\n    salary: 0,\n    \n  },\n  error: { is: false, message: '' }\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_EMPLOYEE_INFO:\n      return {\n        ...state,\n        id: action.payload.id,\n        isManager: action.payload.isManager,\n        facilityID: action.payload.facilityID,\n      };\n    case ERROR:\n      return {\n        ...state,\n        error: { is: true, message: action.payload.message }\n      };\n    case GET_EMPLOYEES:\n      return {\n        ...state,\n        employees: List(action.payload.employees)\n      };\n    default:\n      return state\n  }\n}\n\nexport const setEmployeeInfo = (info) => {\n  return dispatch => {\n    dispatch({ type: SET_EMPLOYEE_INFO, payload: info })\n  }\n};\n\nexport const getEmployees = (payload) => {\n  return dispatch => {\n    apiPost('/facility/employees', payload)\n      .then((resp) => {\n        console.log(resp)\n        if (resp.message) {\n          updateError(resp.message)\n        }\n        dispatch({ type: GET_EMPLOYEES, payload: { employees: resp.employees } })\n      })\n      .catch((error) => {\n        updateError(error.message)\n      })\n  }\n};\n\nexport const updateError = (message) => {\n  return dispatch => {\n    dispatch({ type: ERROR, payload: { message: message } })\n  }\n};\n\n"]},"metadata":{},"sourceType":"module"}