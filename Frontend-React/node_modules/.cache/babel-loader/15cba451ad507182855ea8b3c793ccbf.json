{"ast":null,"code":"import _classCallCheck from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/cash/Documents/PostOffice/Frontend-React/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/cash/Documents/PostOffice/Frontend-React/src/containers/signup/index.js\";\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { List } from 'immutable';\nimport { push } from 'connected-react-router';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { isAuth } from \"../../utils/auth\";\nimport { updateAddress2Field, updateAddressField, updateCityField, updateEmailField, updatePasswordField, updateStateField, updateZipField, updateFirstNameField, updateLastNameField, submit } from '../../reducers/signup';\n\nvar SignUp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SignUp, _React$Component);\n\n  function SignUp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SignUp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SignUp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleEmail = function (event) {\n      console.log(event.target.value);\n\n      _this.props.updateEmailField(event.target.value);\n    };\n\n    _this.handlePassword = function (event) {\n      console.log(event.target.value);\n\n      _this.props.updatePasswordField(event.target.value);\n    };\n\n    _this.handleFirstName = function (event) {\n      console.log(event.target.value);\n\n      _this.props.updateFirstNameField(event.target.value);\n    };\n\n    _this.handleLastName = function (event) {\n      console.log(event.target.value);\n\n      _this.props.updateLastNameField(event.target.value);\n    };\n\n    _this.handleCity = function (event) {\n      console.log(event.target.value);\n\n      _this.props.updateCityField(event.target.value);\n    };\n\n    _this.handleZip = function (event) {\n      console.log(event.target.value);\n\n      _this.props.updateZipField(event.target.value);\n    };\n\n    _this.handleAddress = function (event) {\n      console.log(event.target.value);\n\n      _this.props.updateAddressField(event.target.value);\n    };\n\n    _this.handleAddress2 = function (event) {\n      console.log(event.target.value);\n\n      _this.props.updateAddress2Field(event.target.value);\n    };\n\n    _this.handleState = function (event) {\n      console.log(event.target.value);\n\n      _this.props.updateStateField(event.target.value);\n    };\n\n    _this.handleSubmit = function (event) {\n      _this.props.submit({\n        fName: _this.props.firstName,\n        lName: _this.props.lastName,\n        email: _this.props.email,\n        password: _this.props.password,\n        address: _this.props.address + ' ' + _this.props.address2,\n        zipcode: _this.props.zip,\n        state: _this.props.stateUS\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SignUp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (isAuth()) {\n        this.props.pushHome();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: divStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: h1Style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \" Sign up here! \"), React.createElement(Form, {\n        style: formStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridFirstName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(Form.Control, {\n        placeholder: \"First Name\",\n        value: this.props.firstName,\n        onChange: this.handleFirstName.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridLastName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Last Name\"), React.createElement(Form.Control, {\n        placeholder: \"Last Name\",\n        value: this.props.firstName,\n        onChange: this.handleLastName.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Email\"), React.createElement(Form.Control, {\n        type: \"email\",\n        placeholder: \"Enter email\",\n        value: this.props.email,\n        onChange: this.handleEmail.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Form.Control, {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: this.props.password,\n        onChange: this.handlePassword.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }))), React.createElement(Form.Group, {\n        controlId: \"formGridAddress1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Address\"), React.createElement(Form.Control, {\n        placeholder: \"1234 Main St\",\n        value: this.props.address,\n        onChange: this.handleAddress.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formGridAddress2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Address 2\"), React.createElement(Form.Control, {\n        placeholder: \"Apartment, studio, or floor\",\n        value: this.props.address2,\n        onChange: this.handleAddress2.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      })), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridCity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"City\"), React.createElement(Form.Control, {\n        value: this.props.city,\n        onChange: this.handleCity.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridState\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"State\"), React.createElement(Form.Control, {\n        as: \"select\",\n        value: this.props.stateUS,\n        onChange: this.handleState.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Choose...\"), states.map(function (state) {\n        return React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, state);\n      }))), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridZip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Zip\"), React.createElement(Form.Control, {\n        value: this.props.zip,\n        onChange: this.handleZip.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: this.handleSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Submit\")), \";\");\n    }\n  }]);\n\n  return SignUp;\n}(React.Component); // Styles\n\n\nvar h1Style = {\n  marginTop: '3%'\n};\nvar divStyle = {\n  textAlign: \"center\"\n};\nvar formStyle = {\n  display: 'inline-block',\n  margin: '0 auto',\n  marginTop: '3%'\n}; // State Selector\n\nvar states = List(['Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming', 'District of Columbia', 'Puerto Rico', 'Guam', 'American Samoa', 'U.S. Virgin Islands', 'Northern Mariana Islands']);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var signup = _ref.signup;\n  return {\n    email: signup.email,\n    password: signup.password,\n    address: signup.address,\n    address2: signup.address2,\n    stateUS: signup.stateUS,\n    zip: signup.zip,\n    city: signup.city\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    updateAddressField: updateAddressField,\n    updateCityField: updateCityField,\n    updateAddress2Field: updateAddress2Field,\n    updateZipField: updateZipField,\n    updateStateField: updateStateField,\n    updatePasswordField: updatePasswordField,\n    updateEmailField: updateEmailField,\n    updateFirstNameField: updateFirstNameField,\n    updateLastNameField: updateLastNameField,\n    submit: submit,\n    pushHome: function pushHome() {\n      return push('/');\n    }\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/home/cash/Documents/PostOffice/Frontend-React/src/containers/signup/index.js"],"names":["React","Form","Col","Button","List","push","bindActionCreators","connect","isAuth","updateAddress2Field","updateAddressField","updateCityField","updateEmailField","updatePasswordField","updateStateField","updateZipField","updateFirstNameField","updateLastNameField","submit","SignUp","handleEmail","event","console","log","target","value","props","handlePassword","handleFirstName","handleLastName","handleCity","handleZip","handleAddress","handleAddress2","handleState","handleSubmit","fName","firstName","lName","lastName","email","password","address","address2","zipcode","zip","state","stateUS","pushHome","divStyle","h1Style","formStyle","bind","city","states","map","Component","marginTop","textAlign","display","margin","mapStateToProps","signup","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { List }from 'immutable'\r\nimport { push } from 'connected-react-router'\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { isAuth } from \"../../utils/auth\";\r\nimport {\r\n  updateAddress2Field,\r\n  updateAddressField,\r\n  updateCityField,\r\n  updateEmailField,\r\n  updatePasswordField,\r\n  updateStateField,\r\n  updateZipField,\r\n  updateFirstNameField,\r\n  updateLastNameField,\r\n  submit\r\n} from '../../reducers/signup'\r\n\r\n\r\nclass SignUp extends React.Component {\r\n\r\n  handleEmail = (event) => {\r\n    console.log(event.target.value);\r\n    this.props.updateEmailField(event.target.value)\r\n  };\r\n\r\n  handlePassword = (event) => {\r\n    console.log(event.target.value);\r\n    this.props.updatePasswordField(event.target.value)\r\n  };\r\n\r\n  handleFirstName = (event) => {\r\n    console.log(event.target.value);\r\n    this.props.updateFirstNameField(event.target.value)\r\n  };\r\n\r\n  handleLastName = (event) => {\r\n    console.log(event.target.value);\r\n    this.props.updateLastNameField(event.target.value)\r\n  };\r\n\r\n  handleCity = (event) => {\r\n    console.log(event.target.value);\r\n    this.props.updateCityField(event.target.value)\r\n  };\r\n\r\n  handleZip= (event) => {\r\n    console.log(event.target.value);\r\n    this.props.updateZipField(event.target.value)\r\n  };\r\n\r\n  handleAddress = (event) => {\r\n    console.log(event.target.value);\r\n    this.props.updateAddressField(event.target.value)\r\n  };\r\n\r\n  handleAddress2 = (event) => {\r\n    console.log(event.target.value);\r\n    this.props.updateAddress2Field(event.target.value)\r\n  };\r\n\r\n  handleState = (event) => {\r\n    console.log(event.target.value);\r\n    this.props.updateStateField(event.target.value)\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    this.props.submit({\r\n      fName: this.props.firstName,\r\n      lName: this.props.lastName,\r\n      email: this.props.email,\r\n      password: this.props.password,\r\n      address: this.props.address + ' ' + this.props.address2,\r\n      zipcode: this.props.zip,\r\n      state: this.props.stateUS,\r\n    })\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (isAuth()) {\r\n      this.props.pushHome()\r\n    }\r\n  }\r\n\r\n    render() {\r\n        return <div style={divStyle}>\r\n        <h1 style={h1Style}> Sign up here! </h1>\r\n        <Form style={formStyle}>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formGridFirstName\">\r\n                <Form.Label>First Name</Form.Label>\r\n                <Form.Control placeholder=\"First Name\" value={this.props.firstName} onChange={this.handleFirstName.bind(this)} />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formGridLastName\">\r\n                <Form.Label>Last Name</Form.Label>\r\n                <Form.Control placeholder=\"Last Name\" value={this.props.firstName} onChange={this.handleLastName.bind(this)} />\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter email\" value={this.props.email} onChange={this.handleEmail.bind(this)} />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" value={this.props.password} onChange={this.handlePassword.bind(this)} />\r\n              </Form.Group>\r\n          </Form.Row>\r\n\r\n          <Form.Group controlId=\"formGridAddress1\">\r\n            <Form.Label>Address</Form.Label>\r\n            <Form.Control placeholder=\"1234 Main St\" value={this.props.address} onChange={this.handleAddress.bind(this)} />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formGridAddress2\">\r\n            <Form.Label>Address 2</Form.Label>\r\n            <Form.Control placeholder=\"Apartment, studio, or floor\" value={this.props.address2} onChange={this.handleAddress2.bind(this)} />\r\n          </Form.Group>\r\n\r\n          <Form.Row>\r\n            <Form.Group as={Col} controlId=\"formGridCity\">\r\n              <Form.Label>City</Form.Label>\r\n              <Form.Control value={this.props.city} onChange={this.handleCity.bind(this)}/>\r\n            </Form.Group>\r\n\r\n        <Form.Group as={Col} controlId=\"formGridState\">\r\n          <Form.Label>State</Form.Label>\r\n          <Form.Control as=\"select\" value={this.props.stateUS}onChange={this.handleState.bind(this)}>\r\n            <option>Choose...</option>\r\n              { states.map((state) => {return (<option>{state}</option>)}) }\r\n          </Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Col} controlId=\"formGridZip\">\r\n          <Form.Label>Zip</Form.Label>\r\n          <Form.Control value={this.props.zip} onChange={this.handleZip.bind(this)} />\r\n        </Form.Group>\r\n      </Form.Row>\r\n\r\n      <Button variant=\"primary\" type=\"submit\" onClick={this.handleSubmit.bind(this)}>\r\n        Submit\r\n      </Button>\r\n</Form>;\r\n      </div>\r\n    }\r\n}\r\n\r\n// Styles\r\nconst h1Style = {\r\n    marginTop: '3%',\r\n};\r\n\r\nconst divStyle = {\r\n    textAlign: \"center\",\r\n};\r\n\r\nconst formStyle = {\r\n    display: 'inline-block',\r\n    margin: '0 auto',\r\n    marginTop: '3%',\r\n};\r\n\r\n\r\n// State Selector\r\nconst states = List([\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Carolina',\r\n    'North Dakota',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming',\r\n    'District of Columbia',\r\n    'Puerto Rico',\r\n    'Guam',\r\n    'American Samoa',\r\n    'U.S. Virgin Islands',\r\n    'Northern Mariana Islands',\r\n]);\r\n\r\nconst mapStateToProps = ({ signup }) => ({\r\n  email: signup.email,\r\n  password: signup.password,\r\n  address: signup.address,\r\n  address2: signup.address2,\r\n  stateUS: signup.stateUS,\r\n  zip: signup.zip,\r\n  city: signup.city,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators(\r\n    {\r\n      updateAddressField,\r\n      updateCityField,\r\n      updateAddress2Field,\r\n      updateZipField,\r\n      updateStateField,\r\n      updatePasswordField,\r\n      updateEmailField,\r\n      updateFirstNameField,\r\n      updateLastNameField,\r\n      submit,\r\n      pushHome: () => push('/'),\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignUp)\r\n"]},"metadata":{},"sourceType":"module"}